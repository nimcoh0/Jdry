package tests.infrastructure;


import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
//import org.softauto.tester.Client;
import org.softauto.plugin.ProviderManager;
import org.softauto.plugin.spi.PluginProvider;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.testng.annotations.AfterSuite;
import org.testng.annotations.BeforeSuite;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.ITestContext;
import java.lang.reflect.Method;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import org.softauto.core.Utils;
import com.esotericsoftware.minlog.Log;
import static com.esotericsoftware.minlog.Log.*;
import org.softauto.tester.SystemState;



@org.apache.avro.specific.AvroGenerated
public class AbstractTesterImpl {

    private static final org.apache.logging.log4j.Logger logger = org.apache.logging.log4j.LogManager.getLogger(AbstractTesterImpl.class);
    public ListenerServiceImpl listenerServiceImpl;
    public Listener listener;




    @BeforeSuite
    public void start(){
        try {
           //Log.set(LEVEL_TRACE);
           loadPlugins();
           SystemState.getInstance().initialize();
           listenerServiceImpl = new ListenerServiceImpl();
           listener = new Listener();
        }catch (Exception e){
            logger.error("fail start listener ",e);
        }
    }



    public  void loadPlugins(){
        try {
            for(PluginProvider provider : ProviderManager.providers()){
                if(!provider.getName().equals("RPC")) {
                   provider.create().initialize().register();

                }
            }
        }catch (Exception e){
            logger.error("fail to load plugins  ",e);
        }
    }

}