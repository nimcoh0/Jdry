/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package tests.infrastructure;
import java.util.function.Function;
import org.apache.logging.log4j.Level;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.TimeUnit;
import org.softauto.core.AsyncResult;
import org.softauto.core.Handler;
import org.softauto.core.Future;
import org.softauto.serializer.CallFuture;
import org.softauto.tester.InvocationHandler;
import org.softauto.core.IListener;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.TimeUnit;
import java.util.HashMap;
import java.util.Map;
import java.util.List;
import java.util.ArrayList;

@org.apache.avro.specific.AvroGenerated
public class Step {

    private static org.apache.logging.log4j.Logger logger = org.apache.logging.log4j.LogManager.getLogger(Step.class);




public static class com_baeldung_jersey_client_JerseyClient_getHelloGreeting {

    CallFuture< java.lang.String> future = new CallFuture<>();
    public java.lang.String get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_client_JerseyClient_getHelloGreeting then(Handler<AsyncResult<java.lang.String>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_client_JerseyClient_getHelloGreeting then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_client_JerseyClient_getHelloGreeting then(IListener o,Handler<AsyncResult<java.lang.String>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_client_JerseyClient_getHelloGreeting then(IListener o ,CallFuture<java.lang.String> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }





    public com_baeldung_jersey_client_JerseyClient_getHelloGreeting(    ){
        try {
            logger.debug("invoking proxy for com_baeldung_jersey_client_JerseyClient_getHelloGreeting");
            new InvocationHandler().invoke("com_baeldung_jersey_client_JerseyClient_getHelloGreeting",new Object[]{},new Class[]{},future,"RPC");
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_client_JerseyClient_getHelloGreeting"+ e);
        }
    }



    public com_baeldung_jersey_client_JerseyClient_getHelloGreeting(CallFuture<java.lang.String> future){
        try {
            logger.debug("invoking proxy for com_baeldung_jersey_client_JerseyClient_getHelloGreeting");
            new InvocationHandler().invoke("com_baeldung_jersey_client_JerseyClient_getHelloGreeting",new Object[]{},new Class[]{},future,"RPC");
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_client_JerseyClient_getHelloGreeting"+ e);
        }
 }


    public  com_baeldung_jersey_client_JerseyClient_getHelloGreeting(Handler<AsyncResult<java.lang.String>> resultHandler  )throws Exception{
        try {
            CallFuture<java.lang.String> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_client_JerseyClient_getHelloGreeting");
            new InvocationHandler().invoke("com_baeldung_jersey_client_JerseyClient_getHelloGreeting",new Object[]{},new Class[]{},future,"RPC");
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_client_JerseyClient_getHelloGreeting"+ e);
          resultHandler.handle(Future.handleError(e));
       }
    }




 }

public static class com_baeldung_jersey_client_JerseyClient_getHiGreeting {

    CallFuture< java.lang.String> future = new CallFuture<>();
    public java.lang.String get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_client_JerseyClient_getHiGreeting then(Handler<AsyncResult<java.lang.String>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_client_JerseyClient_getHiGreeting then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_client_JerseyClient_getHiGreeting then(IListener o,Handler<AsyncResult<java.lang.String>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_client_JerseyClient_getHiGreeting then(IListener o ,CallFuture<java.lang.String> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }





    public com_baeldung_jersey_client_JerseyClient_getHiGreeting(    ){
        try {
            logger.debug("invoking proxy for com_baeldung_jersey_client_JerseyClient_getHiGreeting");
            new InvocationHandler().invoke("com_baeldung_jersey_client_JerseyClient_getHiGreeting",new Object[]{},new Class[]{},future,"RPC");
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_client_JerseyClient_getHiGreeting"+ e);
        }
    }



    public com_baeldung_jersey_client_JerseyClient_getHiGreeting(CallFuture<java.lang.String> future){
        try {
            logger.debug("invoking proxy for com_baeldung_jersey_client_JerseyClient_getHiGreeting");
            new InvocationHandler().invoke("com_baeldung_jersey_client_JerseyClient_getHiGreeting",new Object[]{},new Class[]{},future,"RPC");
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_client_JerseyClient_getHiGreeting"+ e);
        }
 }


    public  com_baeldung_jersey_client_JerseyClient_getHiGreeting(Handler<AsyncResult<java.lang.String>> resultHandler  )throws Exception{
        try {
            CallFuture<java.lang.String> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_client_JerseyClient_getHiGreeting");
            new InvocationHandler().invoke("com_baeldung_jersey_client_JerseyClient_getHiGreeting",new Object[]{},new Class[]{},future,"RPC");
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_client_JerseyClient_getHiGreeting"+ e);
          resultHandler.handle(Future.handleError(e));
       }
    }




 }

public static class com_baeldung_jersey_client_JerseyClient_getCustomGreeting {

    CallFuture< javax.ws.rs.core.Response> future = new CallFuture<>();
    public javax.ws.rs.core.Response get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_client_JerseyClient_getCustomGreeting then(Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_client_JerseyClient_getCustomGreeting then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_client_JerseyClient_getCustomGreeting then(IListener o,Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_client_JerseyClient_getCustomGreeting then(IListener o ,CallFuture<javax.ws.rs.core.Response> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }





    public com_baeldung_jersey_client_JerseyClient_getCustomGreeting(    ){
        try {
            logger.debug("invoking proxy for com_baeldung_jersey_client_JerseyClient_getCustomGreeting");
            new InvocationHandler().invoke("com_baeldung_jersey_client_JerseyClient_getCustomGreeting",new Object[]{},new Class[]{},future,"RPC");
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_client_JerseyClient_getCustomGreeting"+ e);
        }
    }



    public com_baeldung_jersey_client_JerseyClient_getCustomGreeting(CallFuture<javax.ws.rs.core.Response> future){
        try {
            logger.debug("invoking proxy for com_baeldung_jersey_client_JerseyClient_getCustomGreeting");
            new InvocationHandler().invoke("com_baeldung_jersey_client_JerseyClient_getCustomGreeting",new Object[]{},new Class[]{},future,"RPC");
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_client_JerseyClient_getCustomGreeting"+ e);
        }
 }


    public  com_baeldung_jersey_client_JerseyClient_getCustomGreeting(Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler  )throws Exception{
        try {
            CallFuture<javax.ws.rs.core.Response> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_client_JerseyClient_getCustomGreeting");
            new InvocationHandler().invoke("com_baeldung_jersey_client_JerseyClient_getCustomGreeting",new Object[]{},new Class[]{},future,"RPC");
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_client_JerseyClient_getCustomGreeting"+ e);
          resultHandler.handle(Future.handleError(e));
       }
    }




 }

public static class com_baeldung_jersey_client_JerseyClient_createClient {

    CallFuture< javax.ws.rs.client.Client> future = new CallFuture<>();
    public javax.ws.rs.client.Client get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_client_JerseyClient_createClient then(Handler<AsyncResult<javax.ws.rs.client.Client>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_client_JerseyClient_createClient then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_client_JerseyClient_createClient then(IListener o,Handler<AsyncResult<javax.ws.rs.client.Client>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_client_JerseyClient_createClient then(IListener o ,CallFuture<javax.ws.rs.client.Client> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }





    public com_baeldung_jersey_client_JerseyClient_createClient(    ){
        try {
            logger.debug("invoking proxy for com_baeldung_jersey_client_JerseyClient_createClient");
            new InvocationHandler().invoke("com_baeldung_jersey_client_JerseyClient_createClient",new Object[]{},new Class[]{},future,"RPC");
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_client_JerseyClient_createClient"+ e);
        }
    }



    public com_baeldung_jersey_client_JerseyClient_createClient(CallFuture<javax.ws.rs.client.Client> future){
        try {
            logger.debug("invoking proxy for com_baeldung_jersey_client_JerseyClient_createClient");
            new InvocationHandler().invoke("com_baeldung_jersey_client_JerseyClient_createClient",new Object[]{},new Class[]{},future,"RPC");
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_client_JerseyClient_createClient"+ e);
        }
 }


    public  com_baeldung_jersey_client_JerseyClient_createClient(Handler<AsyncResult<javax.ws.rs.client.Client>> resultHandler  )throws Exception{
        try {
            CallFuture<javax.ws.rs.client.Client> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_client_JerseyClient_createClient");
            new InvocationHandler().invoke("com_baeldung_jersey_client_JerseyClient_createClient",new Object[]{},new Class[]{},future,"RPC");
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_client_JerseyClient_createClient"+ e);
          resultHandler.handle(Future.handleError(e));
       }
    }




 }

public static class com_baeldung_jersey_server_Greetings_getHelloGreeting {

    javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters = new javax.ws.rs.core.MultivaluedHashMap();
    javax.ws.rs.core.MultivaluedMap<String, Object> headers = new javax.ws.rs.core.MultivaluedHashMap<>();
    //List<Object> entities  = new ArrayList<>();
    //javax.ws.rs.client.Entity<?> entity ;
    javax.ws.rs.core.MediaType produce =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    javax.ws.rs.core.MediaType consume =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    HashMap<String ,Object> properties = new HashMap<>();
    org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature  = null;

    //Class<?> response;


    CallFuture< java.lang.String> future = new CallFuture<>();

    public java.lang.String get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_server_Greetings_getHelloGreeting then(Handler<AsyncResult<java.lang.String>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_server_Greetings_getHelloGreeting then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_server_Greetings_getHelloGreeting then(IListener o,Handler<AsyncResult<java.lang.String>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_server_Greetings_getHelloGreeting then(IListener o ,CallFuture<java.lang.String> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }


    public com_baeldung_jersey_server_Greetings_getHelloGreeting addParameters(javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters){
        this.parameters = parameters;
        return this;
    }

    public com_baeldung_jersey_server_Greetings_getHelloGreeting addParameter(org.softauto.jaxrs.ParamType paramType, String key,String value){
            Map<String,String> m = new HashMap<>();
            m.put(key,value);
            parameters.add(paramType.name(),m);
            return this;
        }

    public com_baeldung_jersey_server_Greetings_getHelloGreeting addHeader(String key,String value){
        headers.add(key,value);
        return this;
    }

    public com_baeldung_jersey_server_Greetings_getHelloGreeting addHeaders(javax.ws.rs.core.MultivaluedMap<String, Object> headers){
        this.headers = headers;
        return this;
    }

    //public com_baeldung_jersey_server_Greetings_getHelloGreeting setEntity(javax.ws.rs.client.Entity<?> entity){
    //    this.entities.add(entity);
    //    return this;
    //}

    public com_baeldung_jersey_server_Greetings_getHelloGreeting setProduce(javax.ws.rs.core.MediaType mediaType){
        this.produce = mediaType;
        return this;
    }

    public com_baeldung_jersey_server_Greetings_getHelloGreeting setConsume(javax.ws.rs.core.MediaType mediaType){
        this.consume = mediaType;
        return this;
    }

    //public com_baeldung_jersey_server_Greetings_getHelloGreeting setResponse(Class<?> response){
     //   this.response = response;
     //   return this;
   // }

   public com_baeldung_jersey_server_Greetings_getHelloGreeting addProperty(String key,Object value){
           properties.put(key,value);
           return this;
       }

    public com_baeldung_jersey_server_Greetings_getHelloGreeting authentication(org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature){
            this.feature = feature;
            return this;
    }

    public com_baeldung_jersey_server_Greetings_getHelloGreeting execute(    ){
        try {

            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("properties",properties);
            callOptions.put("feature",feature);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Greetings_getHelloGreeting");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Greetings_getHelloGreeting",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Greetings_getHelloGreeting"+ e);
        }
        return this;
    }



    public com_baeldung_jersey_server_Greetings_getHelloGreeting execute(CallFuture<java.lang.String> future){
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Greetings_getHelloGreeting");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Greetings_getHelloGreeting",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Greetings_getHelloGreeting"+ e);
        }
        return this;
 }


    public  com_baeldung_jersey_server_Greetings_getHelloGreeting execute(Handler<AsyncResult<java.lang.String>> resultHandler  )throws Exception{
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            CallFuture<java.lang.String> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_server_Greetings_getHelloGreeting");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Greetings_getHelloGreeting",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_server_Greetings_getHelloGreeting"+ e);
          resultHandler.handle(Future.handleError(e));
       }
       return this;
    }




 }

public static class com_baeldung_jersey_server_Greetings_getHiGreeting {

    javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters = new javax.ws.rs.core.MultivaluedHashMap();
    javax.ws.rs.core.MultivaluedMap<String, Object> headers = new javax.ws.rs.core.MultivaluedHashMap<>();
    //List<Object> entities  = new ArrayList<>();
    //javax.ws.rs.client.Entity<?> entity ;
    javax.ws.rs.core.MediaType produce =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    javax.ws.rs.core.MediaType consume =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    HashMap<String ,Object> properties = new HashMap<>();
    org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature  = null;

    //Class<?> response;


    CallFuture< java.lang.String> future = new CallFuture<>();

    public java.lang.String get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_server_Greetings_getHiGreeting then(Handler<AsyncResult<java.lang.String>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_server_Greetings_getHiGreeting then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_server_Greetings_getHiGreeting then(IListener o,Handler<AsyncResult<java.lang.String>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_server_Greetings_getHiGreeting then(IListener o ,CallFuture<java.lang.String> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }


    public com_baeldung_jersey_server_Greetings_getHiGreeting addParameters(javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters){
        this.parameters = parameters;
        return this;
    }

    public com_baeldung_jersey_server_Greetings_getHiGreeting addParameter(org.softauto.jaxrs.ParamType paramType, String key,String value){
            Map<String,String> m = new HashMap<>();
            m.put(key,value);
            parameters.add(paramType.name(),m);
            return this;
        }

    public com_baeldung_jersey_server_Greetings_getHiGreeting addHeader(String key,String value){
        headers.add(key,value);
        return this;
    }

    public com_baeldung_jersey_server_Greetings_getHiGreeting addHeaders(javax.ws.rs.core.MultivaluedMap<String, Object> headers){
        this.headers = headers;
        return this;
    }

    //public com_baeldung_jersey_server_Greetings_getHiGreeting setEntity(javax.ws.rs.client.Entity<?> entity){
    //    this.entities.add(entity);
    //    return this;
    //}

    public com_baeldung_jersey_server_Greetings_getHiGreeting setProduce(javax.ws.rs.core.MediaType mediaType){
        this.produce = mediaType;
        return this;
    }

    public com_baeldung_jersey_server_Greetings_getHiGreeting setConsume(javax.ws.rs.core.MediaType mediaType){
        this.consume = mediaType;
        return this;
    }

    //public com_baeldung_jersey_server_Greetings_getHiGreeting setResponse(Class<?> response){
     //   this.response = response;
     //   return this;
   // }

   public com_baeldung_jersey_server_Greetings_getHiGreeting addProperty(String key,Object value){
           properties.put(key,value);
           return this;
       }

    public com_baeldung_jersey_server_Greetings_getHiGreeting authentication(org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature){
            this.feature = feature;
            return this;
    }

    public com_baeldung_jersey_server_Greetings_getHiGreeting execute(    ){
        try {

            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("properties",properties);
            callOptions.put("feature",feature);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Greetings_getHiGreeting");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Greetings_getHiGreeting",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Greetings_getHiGreeting"+ e);
        }
        return this;
    }



    public com_baeldung_jersey_server_Greetings_getHiGreeting execute(CallFuture<java.lang.String> future){
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Greetings_getHiGreeting");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Greetings_getHiGreeting",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Greetings_getHiGreeting"+ e);
        }
        return this;
 }


    public  com_baeldung_jersey_server_Greetings_getHiGreeting execute(Handler<AsyncResult<java.lang.String>> resultHandler  )throws Exception{
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            CallFuture<java.lang.String> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_server_Greetings_getHiGreeting");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Greetings_getHiGreeting",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_server_Greetings_getHiGreeting"+ e);
          resultHandler.handle(Future.handleError(e));
       }
       return this;
    }




 }

public static class com_baeldung_jersey_server_Greetings_getCustomGreeting {

    javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters = new javax.ws.rs.core.MultivaluedHashMap();
    javax.ws.rs.core.MultivaluedMap<String, Object> headers = new javax.ws.rs.core.MultivaluedHashMap<>();
    //List<Object> entities  = new ArrayList<>();
    //javax.ws.rs.client.Entity<?> entity ;
    javax.ws.rs.core.MediaType produce =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    javax.ws.rs.core.MediaType consume =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    HashMap<String ,Object> properties = new HashMap<>();
    org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature  = null;

    //Class<?> response;


    CallFuture< javax.ws.rs.core.Response> future = new CallFuture<>();

    public javax.ws.rs.core.Response get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_server_Greetings_getCustomGreeting then(Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_server_Greetings_getCustomGreeting then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_server_Greetings_getCustomGreeting then(IListener o,Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_server_Greetings_getCustomGreeting then(IListener o ,CallFuture<javax.ws.rs.core.Response> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }


    public com_baeldung_jersey_server_Greetings_getCustomGreeting addParameters(javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters){
        this.parameters = parameters;
        return this;
    }

    public com_baeldung_jersey_server_Greetings_getCustomGreeting addParameter(org.softauto.jaxrs.ParamType paramType, String key,String value){
            Map<String,String> m = new HashMap<>();
            m.put(key,value);
            parameters.add(paramType.name(),m);
            return this;
        }

    public com_baeldung_jersey_server_Greetings_getCustomGreeting addHeader(String key,String value){
        headers.add(key,value);
        return this;
    }

    public com_baeldung_jersey_server_Greetings_getCustomGreeting addHeaders(javax.ws.rs.core.MultivaluedMap<String, Object> headers){
        this.headers = headers;
        return this;
    }

    //public com_baeldung_jersey_server_Greetings_getCustomGreeting setEntity(javax.ws.rs.client.Entity<?> entity){
    //    this.entities.add(entity);
    //    return this;
    //}

    public com_baeldung_jersey_server_Greetings_getCustomGreeting setProduce(javax.ws.rs.core.MediaType mediaType){
        this.produce = mediaType;
        return this;
    }

    public com_baeldung_jersey_server_Greetings_getCustomGreeting setConsume(javax.ws.rs.core.MediaType mediaType){
        this.consume = mediaType;
        return this;
    }

    //public com_baeldung_jersey_server_Greetings_getCustomGreeting setResponse(Class<?> response){
     //   this.response = response;
     //   return this;
   // }

   public com_baeldung_jersey_server_Greetings_getCustomGreeting addProperty(String key,Object value){
           properties.put(key,value);
           return this;
       }

    public com_baeldung_jersey_server_Greetings_getCustomGreeting authentication(org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature){
            this.feature = feature;
            return this;
    }

    public com_baeldung_jersey_server_Greetings_getCustomGreeting execute(java.lang.String name    ){
        try {

            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("properties",properties);
            callOptions.put("feature",feature);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Greetings_getCustomGreeting");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Greetings_getCustomGreeting",new Object[]{name},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Greetings_getCustomGreeting"+ e);
        }
        return this;
    }



    public com_baeldung_jersey_server_Greetings_getCustomGreeting execute(java.lang.String name,CallFuture<javax.ws.rs.core.Response> future){
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Greetings_getCustomGreeting");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Greetings_getCustomGreeting",new Object[]{name},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Greetings_getCustomGreeting"+ e);
        }
        return this;
 }


    public  com_baeldung_jersey_server_Greetings_getCustomGreeting execute(java.lang.String name,Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler  )throws Exception{
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            CallFuture<javax.ws.rs.core.Response> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_server_Greetings_getCustomGreeting");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Greetings_getCustomGreeting",new Object[]{name},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_server_Greetings_getCustomGreeting"+ e);
          resultHandler.handle(Future.handleError(e));
       }
       return this;
    }




 }

public static class com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtClientLevel {

    CallFuture< javax.ws.rs.core.Response> future = new CallFuture<>();
    public javax.ws.rs.core.Response get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtClientLevel then(Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtClientLevel then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtClientLevel then(IListener o,Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtClientLevel then(IListener o ,CallFuture<javax.ws.rs.core.Response> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }





    public com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtClientLevel(java.lang.String username, java.lang.String password    ){
        try {
            logger.debug("invoking proxy for com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtClientLevel");
            new InvocationHandler().invoke("com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtClientLevel",new Object[]{username,password},new Class[]{java.lang.String.class,java.lang.String.class},future,"RPC");
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtClientLevel"+ e);
        }
    }



    public com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtClientLevel(java.lang.String username, java.lang.String password,CallFuture<javax.ws.rs.core.Response> future){
        try {
            logger.debug("invoking proxy for com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtClientLevel");
            new InvocationHandler().invoke("com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtClientLevel",new Object[]{username,password},new Class[]{java.lang.String.class,java.lang.String.class},future,"RPC");
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtClientLevel"+ e);
        }
 }


    public  com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtClientLevel(java.lang.String username, java.lang.String password,Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler  )throws Exception{
        try {
            CallFuture<javax.ws.rs.core.Response> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtClientLevel");
            new InvocationHandler().invoke("com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtClientLevel",new Object[]{username,password},new Class[]{java.lang.String.class,java.lang.String.class},future,"RPC");
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtClientLevel"+ e);
          resultHandler.handle(Future.handleError(e));
       }
    }




 }

public static class com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtRequestLevel {

    CallFuture< javax.ws.rs.core.Response> future = new CallFuture<>();
    public javax.ws.rs.core.Response get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtRequestLevel then(Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtRequestLevel then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtRequestLevel then(IListener o,Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtRequestLevel then(IListener o ,CallFuture<javax.ws.rs.core.Response> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }





    public com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtRequestLevel(java.lang.String username, java.lang.String password    ){
        try {
            logger.debug("invoking proxy for com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtRequestLevel");
            new InvocationHandler().invoke("com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtRequestLevel",new Object[]{username,password},new Class[]{java.lang.String.class,java.lang.String.class},future,"RPC");
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtRequestLevel"+ e);
        }
    }



    public com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtRequestLevel(java.lang.String username, java.lang.String password,CallFuture<javax.ws.rs.core.Response> future){
        try {
            logger.debug("invoking proxy for com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtRequestLevel");
            new InvocationHandler().invoke("com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtRequestLevel",new Object[]{username,password},new Class[]{java.lang.String.class,java.lang.String.class},future,"RPC");
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtRequestLevel"+ e);
        }
 }


    public  com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtRequestLevel(java.lang.String username, java.lang.String password,Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler  )throws Exception{
        try {
            CallFuture<javax.ws.rs.core.Response> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtRequestLevel");
            new InvocationHandler().invoke("com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtRequestLevel",new Object[]{username,password},new Class[]{java.lang.String.class,java.lang.String.class},future,"RPC");
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_client_JerseyClientHeaders_basicAuthenticationAtRequestLevel"+ e);
          resultHandler.handle(Future.handleError(e));
       }
    }




 }

public static class com_baeldung_jersey_server_Responder_getOkResponse {

    javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters = new javax.ws.rs.core.MultivaluedHashMap();
    javax.ws.rs.core.MultivaluedMap<String, Object> headers = new javax.ws.rs.core.MultivaluedHashMap<>();
    //List<Object> entities  = new ArrayList<>();
    //javax.ws.rs.client.Entity<?> entity ;
    javax.ws.rs.core.MediaType produce =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    javax.ws.rs.core.MediaType consume =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    HashMap<String ,Object> properties = new HashMap<>();
    org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature  = null;

    //Class<?> response;


    CallFuture< javax.ws.rs.core.Response> future = new CallFuture<>();

    public javax.ws.rs.core.Response get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_server_Responder_getOkResponse then(Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_server_Responder_getOkResponse then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_server_Responder_getOkResponse then(IListener o,Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_server_Responder_getOkResponse then(IListener o ,CallFuture<javax.ws.rs.core.Response> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }


    public com_baeldung_jersey_server_Responder_getOkResponse addParameters(javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters){
        this.parameters = parameters;
        return this;
    }

    public com_baeldung_jersey_server_Responder_getOkResponse addParameter(org.softauto.jaxrs.ParamType paramType, String key,String value){
            Map<String,String> m = new HashMap<>();
            m.put(key,value);
            parameters.add(paramType.name(),m);
            return this;
        }

    public com_baeldung_jersey_server_Responder_getOkResponse addHeader(String key,String value){
        headers.add(key,value);
        return this;
    }

    public com_baeldung_jersey_server_Responder_getOkResponse addHeaders(javax.ws.rs.core.MultivaluedMap<String, Object> headers){
        this.headers = headers;
        return this;
    }

    //public com_baeldung_jersey_server_Responder_getOkResponse setEntity(javax.ws.rs.client.Entity<?> entity){
    //    this.entities.add(entity);
    //    return this;
    //}

    public com_baeldung_jersey_server_Responder_getOkResponse setProduce(javax.ws.rs.core.MediaType mediaType){
        this.produce = mediaType;
        return this;
    }

    public com_baeldung_jersey_server_Responder_getOkResponse setConsume(javax.ws.rs.core.MediaType mediaType){
        this.consume = mediaType;
        return this;
    }

    //public com_baeldung_jersey_server_Responder_getOkResponse setResponse(Class<?> response){
     //   this.response = response;
     //   return this;
   // }

   public com_baeldung_jersey_server_Responder_getOkResponse addProperty(String key,Object value){
           properties.put(key,value);
           return this;
       }

    public com_baeldung_jersey_server_Responder_getOkResponse authentication(org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature){
            this.feature = feature;
            return this;
    }

    public com_baeldung_jersey_server_Responder_getOkResponse execute(    ){
        try {

            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("properties",properties);
            callOptions.put("feature",feature);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Responder_getOkResponse");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Responder_getOkResponse",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Responder_getOkResponse"+ e);
        }
        return this;
    }



    public com_baeldung_jersey_server_Responder_getOkResponse execute(CallFuture<javax.ws.rs.core.Response> future){
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Responder_getOkResponse");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Responder_getOkResponse",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Responder_getOkResponse"+ e);
        }
        return this;
 }


    public  com_baeldung_jersey_server_Responder_getOkResponse execute(Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler  )throws Exception{
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            CallFuture<javax.ws.rs.core.Response> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_server_Responder_getOkResponse");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Responder_getOkResponse",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_server_Responder_getOkResponse"+ e);
          resultHandler.handle(Future.handleError(e));
       }
       return this;
    }




 }

public static class com_baeldung_jersey_server_Responder_getNOkTextResponse {

    javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters = new javax.ws.rs.core.MultivaluedHashMap();
    javax.ws.rs.core.MultivaluedMap<String, Object> headers = new javax.ws.rs.core.MultivaluedHashMap<>();
    //List<Object> entities  = new ArrayList<>();
    //javax.ws.rs.client.Entity<?> entity ;
    javax.ws.rs.core.MediaType produce =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    javax.ws.rs.core.MediaType consume =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    HashMap<String ,Object> properties = new HashMap<>();
    org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature  = null;

    //Class<?> response;


    CallFuture< javax.ws.rs.core.Response> future = new CallFuture<>();

    public javax.ws.rs.core.Response get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_server_Responder_getNOkTextResponse then(Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_server_Responder_getNOkTextResponse then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_server_Responder_getNOkTextResponse then(IListener o,Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_server_Responder_getNOkTextResponse then(IListener o ,CallFuture<javax.ws.rs.core.Response> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }


    public com_baeldung_jersey_server_Responder_getNOkTextResponse addParameters(javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters){
        this.parameters = parameters;
        return this;
    }

    public com_baeldung_jersey_server_Responder_getNOkTextResponse addParameter(org.softauto.jaxrs.ParamType paramType, String key,String value){
            Map<String,String> m = new HashMap<>();
            m.put(key,value);
            parameters.add(paramType.name(),m);
            return this;
        }

    public com_baeldung_jersey_server_Responder_getNOkTextResponse addHeader(String key,String value){
        headers.add(key,value);
        return this;
    }

    public com_baeldung_jersey_server_Responder_getNOkTextResponse addHeaders(javax.ws.rs.core.MultivaluedMap<String, Object> headers){
        this.headers = headers;
        return this;
    }

    //public com_baeldung_jersey_server_Responder_getNOkTextResponse setEntity(javax.ws.rs.client.Entity<?> entity){
    //    this.entities.add(entity);
    //    return this;
    //}

    public com_baeldung_jersey_server_Responder_getNOkTextResponse setProduce(javax.ws.rs.core.MediaType mediaType){
        this.produce = mediaType;
        return this;
    }

    public com_baeldung_jersey_server_Responder_getNOkTextResponse setConsume(javax.ws.rs.core.MediaType mediaType){
        this.consume = mediaType;
        return this;
    }

    //public com_baeldung_jersey_server_Responder_getNOkTextResponse setResponse(Class<?> response){
     //   this.response = response;
     //   return this;
   // }

   public com_baeldung_jersey_server_Responder_getNOkTextResponse addProperty(String key,Object value){
           properties.put(key,value);
           return this;
       }

    public com_baeldung_jersey_server_Responder_getNOkTextResponse authentication(org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature){
            this.feature = feature;
            return this;
    }

    public com_baeldung_jersey_server_Responder_getNOkTextResponse execute(    ){
        try {

            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("properties",properties);
            callOptions.put("feature",feature);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Responder_getNOkTextResponse");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Responder_getNOkTextResponse",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Responder_getNOkTextResponse"+ e);
        }
        return this;
    }



    public com_baeldung_jersey_server_Responder_getNOkTextResponse execute(CallFuture<javax.ws.rs.core.Response> future){
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Responder_getNOkTextResponse");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Responder_getNOkTextResponse",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Responder_getNOkTextResponse"+ e);
        }
        return this;
 }


    public  com_baeldung_jersey_server_Responder_getNOkTextResponse execute(Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler  )throws Exception{
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            CallFuture<javax.ws.rs.core.Response> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_server_Responder_getNOkTextResponse");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Responder_getNOkTextResponse",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_server_Responder_getNOkTextResponse"+ e);
          resultHandler.handle(Future.handleError(e));
       }
       return this;
    }




 }

public static class com_baeldung_jersey_server_Responder_getTextResponseTypeDefined {

    javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters = new javax.ws.rs.core.MultivaluedHashMap();
    javax.ws.rs.core.MultivaluedMap<String, Object> headers = new javax.ws.rs.core.MultivaluedHashMap<>();
    //List<Object> entities  = new ArrayList<>();
    //javax.ws.rs.client.Entity<?> entity ;
    javax.ws.rs.core.MediaType produce =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    javax.ws.rs.core.MediaType consume =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    HashMap<String ,Object> properties = new HashMap<>();
    org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature  = null;

    //Class<?> response;


    CallFuture< javax.ws.rs.core.Response> future = new CallFuture<>();

    public javax.ws.rs.core.Response get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_server_Responder_getTextResponseTypeDefined then(Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_server_Responder_getTextResponseTypeDefined then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_server_Responder_getTextResponseTypeDefined then(IListener o,Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_server_Responder_getTextResponseTypeDefined then(IListener o ,CallFuture<javax.ws.rs.core.Response> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }


    public com_baeldung_jersey_server_Responder_getTextResponseTypeDefined addParameters(javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters){
        this.parameters = parameters;
        return this;
    }

    public com_baeldung_jersey_server_Responder_getTextResponseTypeDefined addParameter(org.softauto.jaxrs.ParamType paramType, String key,String value){
            Map<String,String> m = new HashMap<>();
            m.put(key,value);
            parameters.add(paramType.name(),m);
            return this;
        }

    public com_baeldung_jersey_server_Responder_getTextResponseTypeDefined addHeader(String key,String value){
        headers.add(key,value);
        return this;
    }

    public com_baeldung_jersey_server_Responder_getTextResponseTypeDefined addHeaders(javax.ws.rs.core.MultivaluedMap<String, Object> headers){
        this.headers = headers;
        return this;
    }

    //public com_baeldung_jersey_server_Responder_getTextResponseTypeDefined setEntity(javax.ws.rs.client.Entity<?> entity){
    //    this.entities.add(entity);
    //    return this;
    //}

    public com_baeldung_jersey_server_Responder_getTextResponseTypeDefined setProduce(javax.ws.rs.core.MediaType mediaType){
        this.produce = mediaType;
        return this;
    }

    public com_baeldung_jersey_server_Responder_getTextResponseTypeDefined setConsume(javax.ws.rs.core.MediaType mediaType){
        this.consume = mediaType;
        return this;
    }

    //public com_baeldung_jersey_server_Responder_getTextResponseTypeDefined setResponse(Class<?> response){
     //   this.response = response;
     //   return this;
   // }

   public com_baeldung_jersey_server_Responder_getTextResponseTypeDefined addProperty(String key,Object value){
           properties.put(key,value);
           return this;
       }

    public com_baeldung_jersey_server_Responder_getTextResponseTypeDefined authentication(org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature){
            this.feature = feature;
            return this;
    }

    public com_baeldung_jersey_server_Responder_getTextResponseTypeDefined execute(    ){
        try {

            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("properties",properties);
            callOptions.put("feature",feature);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Responder_getTextResponseTypeDefined");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Responder_getTextResponseTypeDefined",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Responder_getTextResponseTypeDefined"+ e);
        }
        return this;
    }



    public com_baeldung_jersey_server_Responder_getTextResponseTypeDefined execute(CallFuture<javax.ws.rs.core.Response> future){
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Responder_getTextResponseTypeDefined");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Responder_getTextResponseTypeDefined",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Responder_getTextResponseTypeDefined"+ e);
        }
        return this;
 }


    public  com_baeldung_jersey_server_Responder_getTextResponseTypeDefined execute(Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler  )throws Exception{
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            CallFuture<javax.ws.rs.core.Response> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_server_Responder_getTextResponseTypeDefined");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Responder_getTextResponseTypeDefined",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_server_Responder_getTextResponseTypeDefined"+ e);
          resultHandler.handle(Future.handleError(e));
       }
       return this;
    }




 }

public static class com_baeldung_jersey_server_Responder_getTextResponseTypeAnnotated {

    javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters = new javax.ws.rs.core.MultivaluedHashMap();
    javax.ws.rs.core.MultivaluedMap<String, Object> headers = new javax.ws.rs.core.MultivaluedHashMap<>();
    //List<Object> entities  = new ArrayList<>();
    //javax.ws.rs.client.Entity<?> entity ;
    javax.ws.rs.core.MediaType produce =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    javax.ws.rs.core.MediaType consume =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    HashMap<String ,Object> properties = new HashMap<>();
    org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature  = null;

    //Class<?> response;


    CallFuture< javax.ws.rs.core.Response> future = new CallFuture<>();

    public javax.ws.rs.core.Response get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_server_Responder_getTextResponseTypeAnnotated then(Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_server_Responder_getTextResponseTypeAnnotated then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_server_Responder_getTextResponseTypeAnnotated then(IListener o,Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_server_Responder_getTextResponseTypeAnnotated then(IListener o ,CallFuture<javax.ws.rs.core.Response> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }


    public com_baeldung_jersey_server_Responder_getTextResponseTypeAnnotated addParameters(javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters){
        this.parameters = parameters;
        return this;
    }

    public com_baeldung_jersey_server_Responder_getTextResponseTypeAnnotated addParameter(org.softauto.jaxrs.ParamType paramType, String key,String value){
            Map<String,String> m = new HashMap<>();
            m.put(key,value);
            parameters.add(paramType.name(),m);
            return this;
        }

    public com_baeldung_jersey_server_Responder_getTextResponseTypeAnnotated addHeader(String key,String value){
        headers.add(key,value);
        return this;
    }

    public com_baeldung_jersey_server_Responder_getTextResponseTypeAnnotated addHeaders(javax.ws.rs.core.MultivaluedMap<String, Object> headers){
        this.headers = headers;
        return this;
    }

    //public com_baeldung_jersey_server_Responder_getTextResponseTypeAnnotated setEntity(javax.ws.rs.client.Entity<?> entity){
    //    this.entities.add(entity);
    //    return this;
    //}

    public com_baeldung_jersey_server_Responder_getTextResponseTypeAnnotated setProduce(javax.ws.rs.core.MediaType mediaType){
        this.produce = mediaType;
        return this;
    }

    public com_baeldung_jersey_server_Responder_getTextResponseTypeAnnotated setConsume(javax.ws.rs.core.MediaType mediaType){
        this.consume = mediaType;
        return this;
    }

    //public com_baeldung_jersey_server_Responder_getTextResponseTypeAnnotated setResponse(Class<?> response){
     //   this.response = response;
     //   return this;
   // }

   public com_baeldung_jersey_server_Responder_getTextResponseTypeAnnotated addProperty(String key,Object value){
           properties.put(key,value);
           return this;
       }

    public com_baeldung_jersey_server_Responder_getTextResponseTypeAnnotated authentication(org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature){
            this.feature = feature;
            return this;
    }

    public com_baeldung_jersey_server_Responder_getTextResponseTypeAnnotated execute(    ){
        try {

            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("properties",properties);
            callOptions.put("feature",feature);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Responder_getTextResponseTypeAnnotated");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Responder_getTextResponseTypeAnnotated",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Responder_getTextResponseTypeAnnotated"+ e);
        }
        return this;
    }



    public com_baeldung_jersey_server_Responder_getTextResponseTypeAnnotated execute(CallFuture<javax.ws.rs.core.Response> future){
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Responder_getTextResponseTypeAnnotated");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Responder_getTextResponseTypeAnnotated",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Responder_getTextResponseTypeAnnotated"+ e);
        }
        return this;
 }


    public  com_baeldung_jersey_server_Responder_getTextResponseTypeAnnotated execute(Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler  )throws Exception{
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            CallFuture<javax.ws.rs.core.Response> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_server_Responder_getTextResponseTypeAnnotated");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Responder_getTextResponseTypeAnnotated",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_server_Responder_getTextResponseTypeAnnotated"+ e);
          resultHandler.handle(Future.handleError(e));
       }
       return this;
    }




 }

public static class com_baeldung_jersey_server_Responder_getPojoResponse {

    javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters = new javax.ws.rs.core.MultivaluedHashMap();
    javax.ws.rs.core.MultivaluedMap<String, Object> headers = new javax.ws.rs.core.MultivaluedHashMap<>();
    //List<Object> entities  = new ArrayList<>();
    //javax.ws.rs.client.Entity<?> entity ;
    javax.ws.rs.core.MediaType produce =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    javax.ws.rs.core.MediaType consume =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    HashMap<String ,Object> properties = new HashMap<>();
    org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature  = null;

    //Class<?> response;


    CallFuture< javax.ws.rs.core.Response> future = new CallFuture<>();

    public javax.ws.rs.core.Response get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_server_Responder_getPojoResponse then(Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_server_Responder_getPojoResponse then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_server_Responder_getPojoResponse then(IListener o,Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_server_Responder_getPojoResponse then(IListener o ,CallFuture<javax.ws.rs.core.Response> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }


    public com_baeldung_jersey_server_Responder_getPojoResponse addParameters(javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters){
        this.parameters = parameters;
        return this;
    }

    public com_baeldung_jersey_server_Responder_getPojoResponse addParameter(org.softauto.jaxrs.ParamType paramType, String key,String value){
            Map<String,String> m = new HashMap<>();
            m.put(key,value);
            parameters.add(paramType.name(),m);
            return this;
        }

    public com_baeldung_jersey_server_Responder_getPojoResponse addHeader(String key,String value){
        headers.add(key,value);
        return this;
    }

    public com_baeldung_jersey_server_Responder_getPojoResponse addHeaders(javax.ws.rs.core.MultivaluedMap<String, Object> headers){
        this.headers = headers;
        return this;
    }

    //public com_baeldung_jersey_server_Responder_getPojoResponse setEntity(javax.ws.rs.client.Entity<?> entity){
    //    this.entities.add(entity);
    //    return this;
    //}

    public com_baeldung_jersey_server_Responder_getPojoResponse setProduce(javax.ws.rs.core.MediaType mediaType){
        this.produce = mediaType;
        return this;
    }

    public com_baeldung_jersey_server_Responder_getPojoResponse setConsume(javax.ws.rs.core.MediaType mediaType){
        this.consume = mediaType;
        return this;
    }

    //public com_baeldung_jersey_server_Responder_getPojoResponse setResponse(Class<?> response){
     //   this.response = response;
     //   return this;
   // }

   public com_baeldung_jersey_server_Responder_getPojoResponse addProperty(String key,Object value){
           properties.put(key,value);
           return this;
       }

    public com_baeldung_jersey_server_Responder_getPojoResponse authentication(org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature){
            this.feature = feature;
            return this;
    }

    public com_baeldung_jersey_server_Responder_getPojoResponse execute(    ){
        try {

            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("properties",properties);
            callOptions.put("feature",feature);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Responder_getPojoResponse");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Responder_getPojoResponse",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Responder_getPojoResponse"+ e);
        }
        return this;
    }



    public com_baeldung_jersey_server_Responder_getPojoResponse execute(CallFuture<javax.ws.rs.core.Response> future){
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Responder_getPojoResponse");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Responder_getPojoResponse",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Responder_getPojoResponse"+ e);
        }
        return this;
 }


    public  com_baeldung_jersey_server_Responder_getPojoResponse execute(Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler  )throws Exception{
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            CallFuture<javax.ws.rs.core.Response> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_server_Responder_getPojoResponse");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Responder_getPojoResponse",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_server_Responder_getPojoResponse"+ e);
          resultHandler.handle(Future.handleError(e));
       }
       return this;
    }




 }

public static class com_baeldung_jersey_server_Responder_getJsonResponse {

    javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters = new javax.ws.rs.core.MultivaluedHashMap();
    javax.ws.rs.core.MultivaluedMap<String, Object> headers = new javax.ws.rs.core.MultivaluedHashMap<>();
    //List<Object> entities  = new ArrayList<>();
    //javax.ws.rs.client.Entity<?> entity ;
    javax.ws.rs.core.MediaType produce =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    javax.ws.rs.core.MediaType consume =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    HashMap<String ,Object> properties = new HashMap<>();
    org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature  = null;

    //Class<?> response;


    CallFuture< javax.ws.rs.core.Response> future = new CallFuture<>();

    public javax.ws.rs.core.Response get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_server_Responder_getJsonResponse then(Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_server_Responder_getJsonResponse then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_server_Responder_getJsonResponse then(IListener o,Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_server_Responder_getJsonResponse then(IListener o ,CallFuture<javax.ws.rs.core.Response> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }


    public com_baeldung_jersey_server_Responder_getJsonResponse addParameters(javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters){
        this.parameters = parameters;
        return this;
    }

    public com_baeldung_jersey_server_Responder_getJsonResponse addParameter(org.softauto.jaxrs.ParamType paramType, String key,String value){
            Map<String,String> m = new HashMap<>();
            m.put(key,value);
            parameters.add(paramType.name(),m);
            return this;
        }

    public com_baeldung_jersey_server_Responder_getJsonResponse addHeader(String key,String value){
        headers.add(key,value);
        return this;
    }

    public com_baeldung_jersey_server_Responder_getJsonResponse addHeaders(javax.ws.rs.core.MultivaluedMap<String, Object> headers){
        this.headers = headers;
        return this;
    }

    //public com_baeldung_jersey_server_Responder_getJsonResponse setEntity(javax.ws.rs.client.Entity<?> entity){
    //    this.entities.add(entity);
    //    return this;
    //}

    public com_baeldung_jersey_server_Responder_getJsonResponse setProduce(javax.ws.rs.core.MediaType mediaType){
        this.produce = mediaType;
        return this;
    }

    public com_baeldung_jersey_server_Responder_getJsonResponse setConsume(javax.ws.rs.core.MediaType mediaType){
        this.consume = mediaType;
        return this;
    }

    //public com_baeldung_jersey_server_Responder_getJsonResponse setResponse(Class<?> response){
     //   this.response = response;
     //   return this;
   // }

   public com_baeldung_jersey_server_Responder_getJsonResponse addProperty(String key,Object value){
           properties.put(key,value);
           return this;
       }

    public com_baeldung_jersey_server_Responder_getJsonResponse authentication(org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature){
            this.feature = feature;
            return this;
    }

    public com_baeldung_jersey_server_Responder_getJsonResponse execute(    ){
        try {

            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("properties",properties);
            callOptions.put("feature",feature);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Responder_getJsonResponse");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Responder_getJsonResponse",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Responder_getJsonResponse"+ e);
        }
        return this;
    }



    public com_baeldung_jersey_server_Responder_getJsonResponse execute(CallFuture<javax.ws.rs.core.Response> future){
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Responder_getJsonResponse");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Responder_getJsonResponse",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Responder_getJsonResponse"+ e);
        }
        return this;
 }


    public  com_baeldung_jersey_server_Responder_getJsonResponse execute(Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler  )throws Exception{
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            CallFuture<javax.ws.rs.core.Response> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_server_Responder_getJsonResponse");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Responder_getJsonResponse",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_server_Responder_getJsonResponse"+ e);
          resultHandler.handle(Future.handleError(e));
       }
       return this;
    }




 }

public static class com_baeldung_jersey_server_Responder_sayXMLHello {

    javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters = new javax.ws.rs.core.MultivaluedHashMap();
    javax.ws.rs.core.MultivaluedMap<String, Object> headers = new javax.ws.rs.core.MultivaluedHashMap<>();
    //List<Object> entities  = new ArrayList<>();
    //javax.ws.rs.client.Entity<?> entity ;
    javax.ws.rs.core.MediaType produce =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    javax.ws.rs.core.MediaType consume =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    HashMap<String ,Object> properties = new HashMap<>();
    org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature  = null;

    //Class<?> response;


    CallFuture< java.lang.String> future = new CallFuture<>();

    public java.lang.String get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_server_Responder_sayXMLHello then(Handler<AsyncResult<java.lang.String>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_server_Responder_sayXMLHello then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_server_Responder_sayXMLHello then(IListener o,Handler<AsyncResult<java.lang.String>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_server_Responder_sayXMLHello then(IListener o ,CallFuture<java.lang.String> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }


    public com_baeldung_jersey_server_Responder_sayXMLHello addParameters(javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters){
        this.parameters = parameters;
        return this;
    }

    public com_baeldung_jersey_server_Responder_sayXMLHello addParameter(org.softauto.jaxrs.ParamType paramType, String key,String value){
            Map<String,String> m = new HashMap<>();
            m.put(key,value);
            parameters.add(paramType.name(),m);
            return this;
        }

    public com_baeldung_jersey_server_Responder_sayXMLHello addHeader(String key,String value){
        headers.add(key,value);
        return this;
    }

    public com_baeldung_jersey_server_Responder_sayXMLHello addHeaders(javax.ws.rs.core.MultivaluedMap<String, Object> headers){
        this.headers = headers;
        return this;
    }

    //public com_baeldung_jersey_server_Responder_sayXMLHello setEntity(javax.ws.rs.client.Entity<?> entity){
    //    this.entities.add(entity);
    //    return this;
    //}

    public com_baeldung_jersey_server_Responder_sayXMLHello setProduce(javax.ws.rs.core.MediaType mediaType){
        this.produce = mediaType;
        return this;
    }

    public com_baeldung_jersey_server_Responder_sayXMLHello setConsume(javax.ws.rs.core.MediaType mediaType){
        this.consume = mediaType;
        return this;
    }

    //public com_baeldung_jersey_server_Responder_sayXMLHello setResponse(Class<?> response){
     //   this.response = response;
     //   return this;
   // }

   public com_baeldung_jersey_server_Responder_sayXMLHello addProperty(String key,Object value){
           properties.put(key,value);
           return this;
       }

    public com_baeldung_jersey_server_Responder_sayXMLHello authentication(org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature){
            this.feature = feature;
            return this;
    }

    public com_baeldung_jersey_server_Responder_sayXMLHello execute(    ){
        try {

            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("properties",properties);
            callOptions.put("feature",feature);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Responder_sayXMLHello");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Responder_sayXMLHello",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Responder_sayXMLHello"+ e);
        }
        return this;
    }



    public com_baeldung_jersey_server_Responder_sayXMLHello execute(CallFuture<java.lang.String> future){
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Responder_sayXMLHello");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Responder_sayXMLHello",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Responder_sayXMLHello"+ e);
        }
        return this;
 }


    public  com_baeldung_jersey_server_Responder_sayXMLHello execute(Handler<AsyncResult<java.lang.String>> resultHandler  )throws Exception{
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            CallFuture<java.lang.String> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_server_Responder_sayXMLHello");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Responder_sayXMLHello",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_server_Responder_sayXMLHello"+ e);
          resultHandler.handle(Future.handleError(e));
       }
       return this;
    }




 }

public static class com_baeldung_jersey_server_Responder_sayHtmlHello {

    javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters = new javax.ws.rs.core.MultivaluedHashMap();
    javax.ws.rs.core.MultivaluedMap<String, Object> headers = new javax.ws.rs.core.MultivaluedHashMap<>();
    //List<Object> entities  = new ArrayList<>();
    //javax.ws.rs.client.Entity<?> entity ;
    javax.ws.rs.core.MediaType produce =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    javax.ws.rs.core.MediaType consume =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    HashMap<String ,Object> properties = new HashMap<>();
    org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature  = null;

    //Class<?> response;


    CallFuture< java.lang.String> future = new CallFuture<>();

    public java.lang.String get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_server_Responder_sayHtmlHello then(Handler<AsyncResult<java.lang.String>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_server_Responder_sayHtmlHello then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_server_Responder_sayHtmlHello then(IListener o,Handler<AsyncResult<java.lang.String>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_server_Responder_sayHtmlHello then(IListener o ,CallFuture<java.lang.String> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }


    public com_baeldung_jersey_server_Responder_sayHtmlHello addParameters(javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters){
        this.parameters = parameters;
        return this;
    }

    public com_baeldung_jersey_server_Responder_sayHtmlHello addParameter(org.softauto.jaxrs.ParamType paramType, String key,String value){
            Map<String,String> m = new HashMap<>();
            m.put(key,value);
            parameters.add(paramType.name(),m);
            return this;
        }

    public com_baeldung_jersey_server_Responder_sayHtmlHello addHeader(String key,String value){
        headers.add(key,value);
        return this;
    }

    public com_baeldung_jersey_server_Responder_sayHtmlHello addHeaders(javax.ws.rs.core.MultivaluedMap<String, Object> headers){
        this.headers = headers;
        return this;
    }

    //public com_baeldung_jersey_server_Responder_sayHtmlHello setEntity(javax.ws.rs.client.Entity<?> entity){
    //    this.entities.add(entity);
    //    return this;
    //}

    public com_baeldung_jersey_server_Responder_sayHtmlHello setProduce(javax.ws.rs.core.MediaType mediaType){
        this.produce = mediaType;
        return this;
    }

    public com_baeldung_jersey_server_Responder_sayHtmlHello setConsume(javax.ws.rs.core.MediaType mediaType){
        this.consume = mediaType;
        return this;
    }

    //public com_baeldung_jersey_server_Responder_sayHtmlHello setResponse(Class<?> response){
     //   this.response = response;
     //   return this;
   // }

   public com_baeldung_jersey_server_Responder_sayHtmlHello addProperty(String key,Object value){
           properties.put(key,value);
           return this;
       }

    public com_baeldung_jersey_server_Responder_sayHtmlHello authentication(org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature){
            this.feature = feature;
            return this;
    }

    public com_baeldung_jersey_server_Responder_sayHtmlHello execute(    ){
        try {

            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("properties",properties);
            callOptions.put("feature",feature);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Responder_sayHtmlHello");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Responder_sayHtmlHello",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Responder_sayHtmlHello"+ e);
        }
        return this;
    }



    public com_baeldung_jersey_server_Responder_sayHtmlHello execute(CallFuture<java.lang.String> future){
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Responder_sayHtmlHello");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Responder_sayHtmlHello",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Responder_sayHtmlHello"+ e);
        }
        return this;
 }


    public  com_baeldung_jersey_server_Responder_sayHtmlHello execute(Handler<AsyncResult<java.lang.String>> resultHandler  )throws Exception{
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            CallFuture<java.lang.String> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_server_Responder_sayHtmlHello");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Responder_sayHtmlHello",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_server_Responder_sayHtmlHello"+ e);
          resultHandler.handle(Future.handleError(e));
       }
       return this;
    }




 }

public static class com_baeldung_jersey_server_rest_FruitResource_getAllFruit {

    javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters = new javax.ws.rs.core.MultivaluedHashMap();
    javax.ws.rs.core.MultivaluedMap<String, Object> headers = new javax.ws.rs.core.MultivaluedHashMap<>();
    //List<Object> entities  = new ArrayList<>();
    //javax.ws.rs.client.Entity<?> entity ;
    javax.ws.rs.core.MediaType produce =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    javax.ws.rs.core.MediaType consume =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    HashMap<String ,Object> properties = new HashMap<>();
    org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature  = null;

    //Class<?> response;


    CallFuture< java.util.Map<java.lang.String,java.lang.Object>> future = new CallFuture<>();

    public java.util.Map<java.lang.String,java.lang.Object> get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_server_rest_FruitResource_getAllFruit then(Handler<AsyncResult<java.util.Map<java.lang.String,java.lang.Object>>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_server_rest_FruitResource_getAllFruit then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_server_rest_FruitResource_getAllFruit then(IListener o,Handler<AsyncResult<java.util.Map<java.lang.String,java.lang.Object>>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_server_rest_FruitResource_getAllFruit then(IListener o ,CallFuture<java.util.Map<java.lang.String,java.lang.Object>> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }


    public com_baeldung_jersey_server_rest_FruitResource_getAllFruit addParameters(javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters){
        this.parameters = parameters;
        return this;
    }

    public com_baeldung_jersey_server_rest_FruitResource_getAllFruit addParameter(org.softauto.jaxrs.ParamType paramType, String key,String value){
            Map<String,String> m = new HashMap<>();
            m.put(key,value);
            parameters.add(paramType.name(),m);
            return this;
        }

    public com_baeldung_jersey_server_rest_FruitResource_getAllFruit addHeader(String key,String value){
        headers.add(key,value);
        return this;
    }

    public com_baeldung_jersey_server_rest_FruitResource_getAllFruit addHeaders(javax.ws.rs.core.MultivaluedMap<String, Object> headers){
        this.headers = headers;
        return this;
    }

    //public com_baeldung_jersey_server_rest_FruitResource_getAllFruit setEntity(javax.ws.rs.client.Entity<?> entity){
    //    this.entities.add(entity);
    //    return this;
    //}

    public com_baeldung_jersey_server_rest_FruitResource_getAllFruit setProduce(javax.ws.rs.core.MediaType mediaType){
        this.produce = mediaType;
        return this;
    }

    public com_baeldung_jersey_server_rest_FruitResource_getAllFruit setConsume(javax.ws.rs.core.MediaType mediaType){
        this.consume = mediaType;
        return this;
    }

    //public com_baeldung_jersey_server_rest_FruitResource_getAllFruit setResponse(Class<?> response){
     //   this.response = response;
     //   return this;
   // }

   public com_baeldung_jersey_server_rest_FruitResource_getAllFruit addProperty(String key,Object value){
           properties.put(key,value);
           return this;
       }

    public com_baeldung_jersey_server_rest_FruitResource_getAllFruit authentication(org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature){
            this.feature = feature;
            return this;
    }

    public com_baeldung_jersey_server_rest_FruitResource_getAllFruit execute(    ){
        try {

            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("properties",properties);
            callOptions.put("feature",feature);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_rest_FruitResource_getAllFruit");
            new InvocationHandler().invoke("com_baeldung_jersey_server_rest_FruitResource_getAllFruit",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_rest_FruitResource_getAllFruit"+ e);
        }
        return this;
    }



    public com_baeldung_jersey_server_rest_FruitResource_getAllFruit execute(CallFuture<java.util.Map<java.lang.String,java.lang.Object>> future){
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_rest_FruitResource_getAllFruit");
            new InvocationHandler().invoke("com_baeldung_jersey_server_rest_FruitResource_getAllFruit",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_rest_FruitResource_getAllFruit"+ e);
        }
        return this;
 }


    public  com_baeldung_jersey_server_rest_FruitResource_getAllFruit execute(Handler<AsyncResult<java.util.Map<java.lang.String,java.lang.Object>>> resultHandler  )throws Exception{
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            CallFuture<java.util.Map<java.lang.String,java.lang.Object>> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_server_rest_FruitResource_getAllFruit");
            new InvocationHandler().invoke("com_baeldung_jersey_server_rest_FruitResource_getAllFruit",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_server_rest_FruitResource_getAllFruit"+ e);
          resultHandler.handle(Future.handleError(e));
       }
       return this;
    }




 }

public static class com_baeldung_jersey_server_rest_FruitResource_getFruitByName {

    javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters = new javax.ws.rs.core.MultivaluedHashMap();
    javax.ws.rs.core.MultivaluedMap<String, Object> headers = new javax.ws.rs.core.MultivaluedHashMap<>();
    //List<Object> entities  = new ArrayList<>();
    //javax.ws.rs.client.Entity<?> entity ;
    javax.ws.rs.core.MediaType produce =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    javax.ws.rs.core.MediaType consume =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    HashMap<String ,Object> properties = new HashMap<>();
    org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature  = null;

    //Class<?> response;


    CallFuture< java.lang.String> future = new CallFuture<>();

    public java.lang.String get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_server_rest_FruitResource_getFruitByName then(Handler<AsyncResult<java.lang.String>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_server_rest_FruitResource_getFruitByName then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_server_rest_FruitResource_getFruitByName then(IListener o,Handler<AsyncResult<java.lang.String>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_server_rest_FruitResource_getFruitByName then(IListener o ,CallFuture<java.lang.String> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }


    public com_baeldung_jersey_server_rest_FruitResource_getFruitByName addParameters(javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters){
        this.parameters = parameters;
        return this;
    }

    public com_baeldung_jersey_server_rest_FruitResource_getFruitByName addParameter(org.softauto.jaxrs.ParamType paramType, String key,String value){
            Map<String,String> m = new HashMap<>();
            m.put(key,value);
            parameters.add(paramType.name(),m);
            return this;
        }

    public com_baeldung_jersey_server_rest_FruitResource_getFruitByName addHeader(String key,String value){
        headers.add(key,value);
        return this;
    }

    public com_baeldung_jersey_server_rest_FruitResource_getFruitByName addHeaders(javax.ws.rs.core.MultivaluedMap<String, Object> headers){
        this.headers = headers;
        return this;
    }

    //public com_baeldung_jersey_server_rest_FruitResource_getFruitByName setEntity(javax.ws.rs.client.Entity<?> entity){
    //    this.entities.add(entity);
    //    return this;
    //}

    public com_baeldung_jersey_server_rest_FruitResource_getFruitByName setProduce(javax.ws.rs.core.MediaType mediaType){
        this.produce = mediaType;
        return this;
    }

    public com_baeldung_jersey_server_rest_FruitResource_getFruitByName setConsume(javax.ws.rs.core.MediaType mediaType){
        this.consume = mediaType;
        return this;
    }

    //public com_baeldung_jersey_server_rest_FruitResource_getFruitByName setResponse(Class<?> response){
     //   this.response = response;
     //   return this;
   // }

   public com_baeldung_jersey_server_rest_FruitResource_getFruitByName addProperty(String key,Object value){
           properties.put(key,value);
           return this;
       }

    public com_baeldung_jersey_server_rest_FruitResource_getFruitByName authentication(org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature){
            this.feature = feature;
            return this;
    }

    public com_baeldung_jersey_server_rest_FruitResource_getFruitByName execute(java.lang.String name    ){
        try {

            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("properties",properties);
            callOptions.put("feature",feature);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_rest_FruitResource_getFruitByName");
            new InvocationHandler().invoke("com_baeldung_jersey_server_rest_FruitResource_getFruitByName",new Object[]{name},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_rest_FruitResource_getFruitByName"+ e);
        }
        return this;
    }



    public com_baeldung_jersey_server_rest_FruitResource_getFruitByName execute(java.lang.String name,CallFuture<java.lang.String> future){
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_rest_FruitResource_getFruitByName");
            new InvocationHandler().invoke("com_baeldung_jersey_server_rest_FruitResource_getFruitByName",new Object[]{name},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_rest_FruitResource_getFruitByName"+ e);
        }
        return this;
 }


    public  com_baeldung_jersey_server_rest_FruitResource_getFruitByName execute(java.lang.String name,Handler<AsyncResult<java.lang.String>> resultHandler  )throws Exception{
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            CallFuture<java.lang.String> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_server_rest_FruitResource_getFruitByName");
            new InvocationHandler().invoke("com_baeldung_jersey_server_rest_FruitResource_getFruitByName",new Object[]{name},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_server_rest_FruitResource_getFruitByName"+ e);
          resultHandler.handle(Future.handleError(e));
       }
       return this;
    }




 }

public static class com_baeldung_jersey_server_rest_FruitResource_createFruit {

    javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters = new javax.ws.rs.core.MultivaluedHashMap();
    javax.ws.rs.core.MultivaluedMap<String, Object> headers = new javax.ws.rs.core.MultivaluedHashMap<>();
    //List<Object> entities  = new ArrayList<>();
    //javax.ws.rs.client.Entity<?> entity ;
    javax.ws.rs.core.MediaType produce =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    javax.ws.rs.core.MediaType consume =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    HashMap<String ,Object> properties = new HashMap<>();
    org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature  = null;

    //Class<?> response;


    CallFuture< javax.ws.rs.core.Response> future = new CallFuture<>();

    public javax.ws.rs.core.Response get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_server_rest_FruitResource_createFruit then(Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_server_rest_FruitResource_createFruit then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_server_rest_FruitResource_createFruit then(IListener o,Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_server_rest_FruitResource_createFruit then(IListener o ,CallFuture<javax.ws.rs.core.Response> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }


    public com_baeldung_jersey_server_rest_FruitResource_createFruit addParameters(javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters){
        this.parameters = parameters;
        return this;
    }

    public com_baeldung_jersey_server_rest_FruitResource_createFruit addParameter(org.softauto.jaxrs.ParamType paramType, String key,String value){
            Map<String,String> m = new HashMap<>();
            m.put(key,value);
            parameters.add(paramType.name(),m);
            return this;
        }

    public com_baeldung_jersey_server_rest_FruitResource_createFruit addHeader(String key,String value){
        headers.add(key,value);
        return this;
    }

    public com_baeldung_jersey_server_rest_FruitResource_createFruit addHeaders(javax.ws.rs.core.MultivaluedMap<String, Object> headers){
        this.headers = headers;
        return this;
    }

    //public com_baeldung_jersey_server_rest_FruitResource_createFruit setEntity(javax.ws.rs.client.Entity<?> entity){
    //    this.entities.add(entity);
    //    return this;
    //}

    public com_baeldung_jersey_server_rest_FruitResource_createFruit setProduce(javax.ws.rs.core.MediaType mediaType){
        this.produce = mediaType;
        return this;
    }

    public com_baeldung_jersey_server_rest_FruitResource_createFruit setConsume(javax.ws.rs.core.MediaType mediaType){
        this.consume = mediaType;
        return this;
    }

    //public com_baeldung_jersey_server_rest_FruitResource_createFruit setResponse(Class<?> response){
     //   this.response = response;
     //   return this;
   // }

   public com_baeldung_jersey_server_rest_FruitResource_createFruit addProperty(String key,Object value){
           properties.put(key,value);
           return this;
       }

    public com_baeldung_jersey_server_rest_FruitResource_createFruit authentication(org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature){
            this.feature = feature;
            return this;
    }

    public com_baeldung_jersey_server_rest_FruitResource_createFruit execute(com.baeldung.jersey.server.model.Fruit fruit    ){
        try {

            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("properties",properties);
            callOptions.put("feature",feature);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_rest_FruitResource_createFruit");
            new InvocationHandler().invoke("com_baeldung_jersey_server_rest_FruitResource_createFruit",new Object[]{fruit},new Class[]{com.baeldung.jersey.server.model.Fruit.class},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_rest_FruitResource_createFruit"+ e);
        }
        return this;
    }



    public com_baeldung_jersey_server_rest_FruitResource_createFruit execute(com.baeldung.jersey.server.model.Fruit fruit,CallFuture<javax.ws.rs.core.Response> future){
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_rest_FruitResource_createFruit");
            new InvocationHandler().invoke("com_baeldung_jersey_server_rest_FruitResource_createFruit",new Object[]{fruit},new Class[]{com.baeldung.jersey.server.model.Fruit.class},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_rest_FruitResource_createFruit"+ e);
        }
        return this;
 }


    public  com_baeldung_jersey_server_rest_FruitResource_createFruit execute(com.baeldung.jersey.server.model.Fruit fruit,Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler  )throws Exception{
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            CallFuture<javax.ws.rs.core.Response> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_server_rest_FruitResource_createFruit");
            new InvocationHandler().invoke("com_baeldung_jersey_server_rest_FruitResource_createFruit",new Object[]{fruit},new Class[]{com.baeldung.jersey.server.model.Fruit.class},future,"JAXRS",callOptions);
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_server_rest_FruitResource_createFruit"+ e);
          resultHandler.handle(Future.handleError(e));
       }
       return this;
    }




 }

public static class com_baeldung_jersey_server_rest_FruitResource_updateFruit {

    javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters = new javax.ws.rs.core.MultivaluedHashMap();
    javax.ws.rs.core.MultivaluedMap<String, Object> headers = new javax.ws.rs.core.MultivaluedHashMap<>();
    //List<Object> entities  = new ArrayList<>();
    //javax.ws.rs.client.Entity<?> entity ;
    javax.ws.rs.core.MediaType produce =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    javax.ws.rs.core.MediaType consume =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    HashMap<String ,Object> properties = new HashMap<>();
    org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature  = null;

    //Class<?> response;


    CallFuture< javax.ws.rs.core.Response> future = new CallFuture<>();

    public javax.ws.rs.core.Response get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_server_rest_FruitResource_updateFruit then(Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_server_rest_FruitResource_updateFruit then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_server_rest_FruitResource_updateFruit then(IListener o,Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_server_rest_FruitResource_updateFruit then(IListener o ,CallFuture<javax.ws.rs.core.Response> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }


    public com_baeldung_jersey_server_rest_FruitResource_updateFruit addParameters(javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters){
        this.parameters = parameters;
        return this;
    }

    public com_baeldung_jersey_server_rest_FruitResource_updateFruit addParameter(org.softauto.jaxrs.ParamType paramType, String key,String value){
            Map<String,String> m = new HashMap<>();
            m.put(key,value);
            parameters.add(paramType.name(),m);
            return this;
        }

    public com_baeldung_jersey_server_rest_FruitResource_updateFruit addHeader(String key,String value){
        headers.add(key,value);
        return this;
    }

    public com_baeldung_jersey_server_rest_FruitResource_updateFruit addHeaders(javax.ws.rs.core.MultivaluedMap<String, Object> headers){
        this.headers = headers;
        return this;
    }

    //public com_baeldung_jersey_server_rest_FruitResource_updateFruit setEntity(javax.ws.rs.client.Entity<?> entity){
    //    this.entities.add(entity);
    //    return this;
    //}

    public com_baeldung_jersey_server_rest_FruitResource_updateFruit setProduce(javax.ws.rs.core.MediaType mediaType){
        this.produce = mediaType;
        return this;
    }

    public com_baeldung_jersey_server_rest_FruitResource_updateFruit setConsume(javax.ws.rs.core.MediaType mediaType){
        this.consume = mediaType;
        return this;
    }

    //public com_baeldung_jersey_server_rest_FruitResource_updateFruit setResponse(Class<?> response){
     //   this.response = response;
     //   return this;
   // }

   public com_baeldung_jersey_server_rest_FruitResource_updateFruit addProperty(String key,Object value){
           properties.put(key,value);
           return this;
       }

    public com_baeldung_jersey_server_rest_FruitResource_updateFruit authentication(org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature){
            this.feature = feature;
            return this;
    }

    public com_baeldung_jersey_server_rest_FruitResource_updateFruit execute(java.lang.String serial    ){
        try {

            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("properties",properties);
            callOptions.put("feature",feature);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_rest_FruitResource_updateFruit");
            new InvocationHandler().invoke("com_baeldung_jersey_server_rest_FruitResource_updateFruit",new Object[]{serial},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_rest_FruitResource_updateFruit"+ e);
        }
        return this;
    }



    public com_baeldung_jersey_server_rest_FruitResource_updateFruit execute(java.lang.String serial,CallFuture<javax.ws.rs.core.Response> future){
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_rest_FruitResource_updateFruit");
            new InvocationHandler().invoke("com_baeldung_jersey_server_rest_FruitResource_updateFruit",new Object[]{serial},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_rest_FruitResource_updateFruit"+ e);
        }
        return this;
 }


    public  com_baeldung_jersey_server_rest_FruitResource_updateFruit execute(java.lang.String serial,Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler  )throws Exception{
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            CallFuture<javax.ws.rs.core.Response> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_server_rest_FruitResource_updateFruit");
            new InvocationHandler().invoke("com_baeldung_jersey_server_rest_FruitResource_updateFruit",new Object[]{serial},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_server_rest_FruitResource_updateFruit"+ e);
          resultHandler.handle(Future.handleError(e));
       }
       return this;
    }




 }

public static class com_baeldung_jersey_server_rest_FruitResource_createNewFruit {

    javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters = new javax.ws.rs.core.MultivaluedHashMap();
    javax.ws.rs.core.MultivaluedMap<String, Object> headers = new javax.ws.rs.core.MultivaluedHashMap<>();
    //List<Object> entities  = new ArrayList<>();
    //javax.ws.rs.client.Entity<?> entity ;
    javax.ws.rs.core.MediaType produce =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    javax.ws.rs.core.MediaType consume =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    HashMap<String ,Object> properties = new HashMap<>();
    org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature  = null;

    //Class<?> response;


    CallFuture< javax.ws.rs.core.Response> future = new CallFuture<>();

    public javax.ws.rs.core.Response get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_server_rest_FruitResource_createNewFruit then(Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_server_rest_FruitResource_createNewFruit then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_server_rest_FruitResource_createNewFruit then(IListener o,Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_server_rest_FruitResource_createNewFruit then(IListener o ,CallFuture<javax.ws.rs.core.Response> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }


    public com_baeldung_jersey_server_rest_FruitResource_createNewFruit addParameters(javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters){
        this.parameters = parameters;
        return this;
    }

    public com_baeldung_jersey_server_rest_FruitResource_createNewFruit addParameter(org.softauto.jaxrs.ParamType paramType, String key,String value){
            Map<String,String> m = new HashMap<>();
            m.put(key,value);
            parameters.add(paramType.name(),m);
            return this;
        }

    public com_baeldung_jersey_server_rest_FruitResource_createNewFruit addHeader(String key,String value){
        headers.add(key,value);
        return this;
    }

    public com_baeldung_jersey_server_rest_FruitResource_createNewFruit addHeaders(javax.ws.rs.core.MultivaluedMap<String, Object> headers){
        this.headers = headers;
        return this;
    }

    //public com_baeldung_jersey_server_rest_FruitResource_createNewFruit setEntity(javax.ws.rs.client.Entity<?> entity){
    //    this.entities.add(entity);
    //    return this;
    //}

    public com_baeldung_jersey_server_rest_FruitResource_createNewFruit setProduce(javax.ws.rs.core.MediaType mediaType){
        this.produce = mediaType;
        return this;
    }

    public com_baeldung_jersey_server_rest_FruitResource_createNewFruit setConsume(javax.ws.rs.core.MediaType mediaType){
        this.consume = mediaType;
        return this;
    }

    //public com_baeldung_jersey_server_rest_FruitResource_createNewFruit setResponse(Class<?> response){
     //   this.response = response;
     //   return this;
   // }

   public com_baeldung_jersey_server_rest_FruitResource_createNewFruit addProperty(String key,Object value){
           properties.put(key,value);
           return this;
       }

    public com_baeldung_jersey_server_rest_FruitResource_createNewFruit authentication(org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature){
            this.feature = feature;
            return this;
    }

    public com_baeldung_jersey_server_rest_FruitResource_createNewFruit execute(com.baeldung.jersey.server.model.Fruit fruit    ){
        try {

            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("properties",properties);
            callOptions.put("feature",feature);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_rest_FruitResource_createNewFruit");
            new InvocationHandler().invoke("com_baeldung_jersey_server_rest_FruitResource_createNewFruit",new Object[]{fruit},new Class[]{com.baeldung.jersey.server.model.Fruit.class},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_rest_FruitResource_createNewFruit"+ e);
        }
        return this;
    }



    public com_baeldung_jersey_server_rest_FruitResource_createNewFruit execute(com.baeldung.jersey.server.model.Fruit fruit,CallFuture<javax.ws.rs.core.Response> future){
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_rest_FruitResource_createNewFruit");
            new InvocationHandler().invoke("com_baeldung_jersey_server_rest_FruitResource_createNewFruit",new Object[]{fruit},new Class[]{com.baeldung.jersey.server.model.Fruit.class},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_rest_FruitResource_createNewFruit"+ e);
        }
        return this;
 }


    public  com_baeldung_jersey_server_rest_FruitResource_createNewFruit execute(com.baeldung.jersey.server.model.Fruit fruit,Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler  )throws Exception{
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            CallFuture<javax.ws.rs.core.Response> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_server_rest_FruitResource_createNewFruit");
            new InvocationHandler().invoke("com_baeldung_jersey_server_rest_FruitResource_createNewFruit",new Object[]{fruit},new Class[]{com.baeldung.jersey.server.model.Fruit.class},future,"JAXRS",callOptions);
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_server_rest_FruitResource_createNewFruit"+ e);
          resultHandler.handle(Future.handleError(e));
       }
       return this;
    }




 }

public static class com_baeldung_jersey_server_rest_FruitResource_findFruitByName {

    javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters = new javax.ws.rs.core.MultivaluedHashMap();
    javax.ws.rs.core.MultivaluedMap<String, Object> headers = new javax.ws.rs.core.MultivaluedHashMap<>();
    //List<Object> entities  = new ArrayList<>();
    //javax.ws.rs.client.Entity<?> entity ;
    javax.ws.rs.core.MediaType produce =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    javax.ws.rs.core.MediaType consume =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    HashMap<String ,Object> properties = new HashMap<>();
    org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature  = null;

    //Class<?> response;


    CallFuture< com.baeldung.jersey.server.model.Fruit> future = new CallFuture<>();

    public com.baeldung.jersey.server.model.Fruit get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_server_rest_FruitResource_findFruitByName then(Handler<AsyncResult<com.baeldung.jersey.server.model.Fruit>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_server_rest_FruitResource_findFruitByName then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_server_rest_FruitResource_findFruitByName then(IListener o,Handler<AsyncResult<com.baeldung.jersey.server.model.Fruit>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_server_rest_FruitResource_findFruitByName then(IListener o ,CallFuture<com.baeldung.jersey.server.model.Fruit> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }


    public com_baeldung_jersey_server_rest_FruitResource_findFruitByName addParameters(javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters){
        this.parameters = parameters;
        return this;
    }

    public com_baeldung_jersey_server_rest_FruitResource_findFruitByName addParameter(org.softauto.jaxrs.ParamType paramType, String key,String value){
            Map<String,String> m = new HashMap<>();
            m.put(key,value);
            parameters.add(paramType.name(),m);
            return this;
        }

    public com_baeldung_jersey_server_rest_FruitResource_findFruitByName addHeader(String key,String value){
        headers.add(key,value);
        return this;
    }

    public com_baeldung_jersey_server_rest_FruitResource_findFruitByName addHeaders(javax.ws.rs.core.MultivaluedMap<String, Object> headers){
        this.headers = headers;
        return this;
    }

    //public com_baeldung_jersey_server_rest_FruitResource_findFruitByName setEntity(javax.ws.rs.client.Entity<?> entity){
    //    this.entities.add(entity);
    //    return this;
    //}

    public com_baeldung_jersey_server_rest_FruitResource_findFruitByName setProduce(javax.ws.rs.core.MediaType mediaType){
        this.produce = mediaType;
        return this;
    }

    public com_baeldung_jersey_server_rest_FruitResource_findFruitByName setConsume(javax.ws.rs.core.MediaType mediaType){
        this.consume = mediaType;
        return this;
    }

    //public com_baeldung_jersey_server_rest_FruitResource_findFruitByName setResponse(Class<?> response){
     //   this.response = response;
     //   return this;
   // }

   public com_baeldung_jersey_server_rest_FruitResource_findFruitByName addProperty(String key,Object value){
           properties.put(key,value);
           return this;
       }

    public com_baeldung_jersey_server_rest_FruitResource_findFruitByName authentication(org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature){
            this.feature = feature;
            return this;
    }

    public com_baeldung_jersey_server_rest_FruitResource_findFruitByName execute(java.lang.String name    ){
        try {

            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("properties",properties);
            callOptions.put("feature",feature);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_rest_FruitResource_findFruitByName");
            new InvocationHandler().invoke("com_baeldung_jersey_server_rest_FruitResource_findFruitByName",new Object[]{name},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_rest_FruitResource_findFruitByName"+ e);
        }
        return this;
    }



    public com_baeldung_jersey_server_rest_FruitResource_findFruitByName execute(java.lang.String name,CallFuture<com.baeldung.jersey.server.model.Fruit> future){
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_rest_FruitResource_findFruitByName");
            new InvocationHandler().invoke("com_baeldung_jersey_server_rest_FruitResource_findFruitByName",new Object[]{name},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_rest_FruitResource_findFruitByName"+ e);
        }
        return this;
 }


    public  com_baeldung_jersey_server_rest_FruitResource_findFruitByName execute(java.lang.String name,Handler<AsyncResult<com.baeldung.jersey.server.model.Fruit>> resultHandler  )throws Exception{
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            CallFuture<com.baeldung.jersey.server.model.Fruit> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_server_rest_FruitResource_findFruitByName");
            new InvocationHandler().invoke("com_baeldung_jersey_server_rest_FruitResource_findFruitByName",new Object[]{name},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_server_rest_FruitResource_findFruitByName"+ e);
          resultHandler.handle(Future.handleError(e));
       }
       return this;
    }




 }

public static class com_baeldung_jersey_server_rest_FruitResource_exception {

    javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters = new javax.ws.rs.core.MultivaluedHashMap();
    javax.ws.rs.core.MultivaluedMap<String, Object> headers = new javax.ws.rs.core.MultivaluedHashMap<>();
    //List<Object> entities  = new ArrayList<>();
    //javax.ws.rs.client.Entity<?> entity ;
    javax.ws.rs.core.MediaType produce =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    javax.ws.rs.core.MediaType consume =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    HashMap<String ,Object> properties = new HashMap<>();
    org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature  = null;

    //Class<?> response;


    CallFuture< com.baeldung.jersey.server.model.Fruit> future = new CallFuture<>();

    public com.baeldung.jersey.server.model.Fruit get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_server_rest_FruitResource_exception then(Handler<AsyncResult<com.baeldung.jersey.server.model.Fruit>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_server_rest_FruitResource_exception then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_server_rest_FruitResource_exception then(IListener o,Handler<AsyncResult<com.baeldung.jersey.server.model.Fruit>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_server_rest_FruitResource_exception then(IListener o ,CallFuture<com.baeldung.jersey.server.model.Fruit> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }


    public com_baeldung_jersey_server_rest_FruitResource_exception addParameters(javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters){
        this.parameters = parameters;
        return this;
    }

    public com_baeldung_jersey_server_rest_FruitResource_exception addParameter(org.softauto.jaxrs.ParamType paramType, String key,String value){
            Map<String,String> m = new HashMap<>();
            m.put(key,value);
            parameters.add(paramType.name(),m);
            return this;
        }

    public com_baeldung_jersey_server_rest_FruitResource_exception addHeader(String key,String value){
        headers.add(key,value);
        return this;
    }

    public com_baeldung_jersey_server_rest_FruitResource_exception addHeaders(javax.ws.rs.core.MultivaluedMap<String, Object> headers){
        this.headers = headers;
        return this;
    }

    //public com_baeldung_jersey_server_rest_FruitResource_exception setEntity(javax.ws.rs.client.Entity<?> entity){
    //    this.entities.add(entity);
    //    return this;
    //}

    public com_baeldung_jersey_server_rest_FruitResource_exception setProduce(javax.ws.rs.core.MediaType mediaType){
        this.produce = mediaType;
        return this;
    }

    public com_baeldung_jersey_server_rest_FruitResource_exception setConsume(javax.ws.rs.core.MediaType mediaType){
        this.consume = mediaType;
        return this;
    }

    //public com_baeldung_jersey_server_rest_FruitResource_exception setResponse(Class<?> response){
     //   this.response = response;
     //   return this;
   // }

   public com_baeldung_jersey_server_rest_FruitResource_exception addProperty(String key,Object value){
           properties.put(key,value);
           return this;
       }

    public com_baeldung_jersey_server_rest_FruitResource_exception authentication(org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature){
            this.feature = feature;
            return this;
    }

    public com_baeldung_jersey_server_rest_FruitResource_exception execute(    ){
        try {

            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("properties",properties);
            callOptions.put("feature",feature);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_rest_FruitResource_exception");
            new InvocationHandler().invoke("com_baeldung_jersey_server_rest_FruitResource_exception",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_rest_FruitResource_exception"+ e);
        }
        return this;
    }



    public com_baeldung_jersey_server_rest_FruitResource_exception execute(CallFuture<com.baeldung.jersey.server.model.Fruit> future){
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_rest_FruitResource_exception");
            new InvocationHandler().invoke("com_baeldung_jersey_server_rest_FruitResource_exception",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_rest_FruitResource_exception"+ e);
        }
        return this;
 }


    public  com_baeldung_jersey_server_rest_FruitResource_exception execute(Handler<AsyncResult<com.baeldung.jersey.server.model.Fruit>> resultHandler  )throws Exception{
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            CallFuture<com.baeldung.jersey.server.model.Fruit> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_server_rest_FruitResource_exception");
            new InvocationHandler().invoke("com_baeldung_jersey_server_rest_FruitResource_exception",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_server_rest_FruitResource_exception"+ e);
          resultHandler.handle(Future.handleError(e));
       }
       return this;
    }




 }

public static class com_baeldung_jersey_server_EchoHeaders_getHeadersBack {

    javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters = new javax.ws.rs.core.MultivaluedHashMap();
    javax.ws.rs.core.MultivaluedMap<String, Object> headers = new javax.ws.rs.core.MultivaluedHashMap<>();
    //List<Object> entities  = new ArrayList<>();
    //javax.ws.rs.client.Entity<?> entity ;
    javax.ws.rs.core.MediaType produce =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    javax.ws.rs.core.MediaType consume =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    HashMap<String ,Object> properties = new HashMap<>();
    org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature  = null;

    //Class<?> response;


    CallFuture< javax.ws.rs.core.Response> future = new CallFuture<>();

    public javax.ws.rs.core.Response get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_server_EchoHeaders_getHeadersBack then(Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_server_EchoHeaders_getHeadersBack then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_server_EchoHeaders_getHeadersBack then(IListener o,Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_server_EchoHeaders_getHeadersBack then(IListener o ,CallFuture<javax.ws.rs.core.Response> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }


    public com_baeldung_jersey_server_EchoHeaders_getHeadersBack addParameters(javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters){
        this.parameters = parameters;
        return this;
    }

    public com_baeldung_jersey_server_EchoHeaders_getHeadersBack addParameter(org.softauto.jaxrs.ParamType paramType, String key,String value){
            Map<String,String> m = new HashMap<>();
            m.put(key,value);
            parameters.add(paramType.name(),m);
            return this;
        }

    public com_baeldung_jersey_server_EchoHeaders_getHeadersBack addHeader(String key,String value){
        headers.add(key,value);
        return this;
    }

    public com_baeldung_jersey_server_EchoHeaders_getHeadersBack addHeaders(javax.ws.rs.core.MultivaluedMap<String, Object> headers){
        this.headers = headers;
        return this;
    }

    //public com_baeldung_jersey_server_EchoHeaders_getHeadersBack setEntity(javax.ws.rs.client.Entity<?> entity){
    //    this.entities.add(entity);
    //    return this;
    //}

    public com_baeldung_jersey_server_EchoHeaders_getHeadersBack setProduce(javax.ws.rs.core.MediaType mediaType){
        this.produce = mediaType;
        return this;
    }

    public com_baeldung_jersey_server_EchoHeaders_getHeadersBack setConsume(javax.ws.rs.core.MediaType mediaType){
        this.consume = mediaType;
        return this;
    }

    //public com_baeldung_jersey_server_EchoHeaders_getHeadersBack setResponse(Class<?> response){
     //   this.response = response;
     //   return this;
   // }

   public com_baeldung_jersey_server_EchoHeaders_getHeadersBack addProperty(String key,Object value){
           properties.put(key,value);
           return this;
       }

    public com_baeldung_jersey_server_EchoHeaders_getHeadersBack authentication(org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature){
            this.feature = feature;
            return this;
    }

    public com_baeldung_jersey_server_EchoHeaders_getHeadersBack execute(    ){
        try {

            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("properties",properties);
            callOptions.put("feature",feature);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_EchoHeaders_getHeadersBack");
            new InvocationHandler().invoke("com_baeldung_jersey_server_EchoHeaders_getHeadersBack",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_EchoHeaders_getHeadersBack"+ e);
        }
        return this;
    }



    public com_baeldung_jersey_server_EchoHeaders_getHeadersBack execute(CallFuture<javax.ws.rs.core.Response> future){
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_EchoHeaders_getHeadersBack");
            new InvocationHandler().invoke("com_baeldung_jersey_server_EchoHeaders_getHeadersBack",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_EchoHeaders_getHeadersBack"+ e);
        }
        return this;
 }


    public  com_baeldung_jersey_server_EchoHeaders_getHeadersBack execute(Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler  )throws Exception{
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            CallFuture<javax.ws.rs.core.Response> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_server_EchoHeaders_getHeadersBack");
            new InvocationHandler().invoke("com_baeldung_jersey_server_EchoHeaders_getHeadersBack",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_server_EchoHeaders_getHeadersBack"+ e);
          resultHandler.handle(Future.handleError(e));
       }
       return this;
    }




 }

public static class com_baeldung_jersey_server_EchoHeaders_getHeadersBackFromDigestAuthentication {

    javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters = new javax.ws.rs.core.MultivaluedHashMap();
    javax.ws.rs.core.MultivaluedMap<String, Object> headers = new javax.ws.rs.core.MultivaluedHashMap<>();
    //List<Object> entities  = new ArrayList<>();
    //javax.ws.rs.client.Entity<?> entity ;
    javax.ws.rs.core.MediaType produce =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    javax.ws.rs.core.MediaType consume =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    HashMap<String ,Object> properties = new HashMap<>();
    org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature  = null;

    //Class<?> response;


    CallFuture< javax.ws.rs.core.Response> future = new CallFuture<>();

    public javax.ws.rs.core.Response get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_server_EchoHeaders_getHeadersBackFromDigestAuthentication then(Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_server_EchoHeaders_getHeadersBackFromDigestAuthentication then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_server_EchoHeaders_getHeadersBackFromDigestAuthentication then(IListener o,Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_server_EchoHeaders_getHeadersBackFromDigestAuthentication then(IListener o ,CallFuture<javax.ws.rs.core.Response> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }


    public com_baeldung_jersey_server_EchoHeaders_getHeadersBackFromDigestAuthentication addParameters(javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters){
        this.parameters = parameters;
        return this;
    }

    public com_baeldung_jersey_server_EchoHeaders_getHeadersBackFromDigestAuthentication addParameter(org.softauto.jaxrs.ParamType paramType, String key,String value){
            Map<String,String> m = new HashMap<>();
            m.put(key,value);
            parameters.add(paramType.name(),m);
            return this;
        }

    public com_baeldung_jersey_server_EchoHeaders_getHeadersBackFromDigestAuthentication addHeader(String key,String value){
        headers.add(key,value);
        return this;
    }

    public com_baeldung_jersey_server_EchoHeaders_getHeadersBackFromDigestAuthentication addHeaders(javax.ws.rs.core.MultivaluedMap<String, Object> headers){
        this.headers = headers;
        return this;
    }

    //public com_baeldung_jersey_server_EchoHeaders_getHeadersBackFromDigestAuthentication setEntity(javax.ws.rs.client.Entity<?> entity){
    //    this.entities.add(entity);
    //    return this;
    //}

    public com_baeldung_jersey_server_EchoHeaders_getHeadersBackFromDigestAuthentication setProduce(javax.ws.rs.core.MediaType mediaType){
        this.produce = mediaType;
        return this;
    }

    public com_baeldung_jersey_server_EchoHeaders_getHeadersBackFromDigestAuthentication setConsume(javax.ws.rs.core.MediaType mediaType){
        this.consume = mediaType;
        return this;
    }

    //public com_baeldung_jersey_server_EchoHeaders_getHeadersBackFromDigestAuthentication setResponse(Class<?> response){
     //   this.response = response;
     //   return this;
   // }

   public com_baeldung_jersey_server_EchoHeaders_getHeadersBackFromDigestAuthentication addProperty(String key,Object value){
           properties.put(key,value);
           return this;
       }

    public com_baeldung_jersey_server_EchoHeaders_getHeadersBackFromDigestAuthentication authentication(org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature){
            this.feature = feature;
            return this;
    }

    public com_baeldung_jersey_server_EchoHeaders_getHeadersBackFromDigestAuthentication execute(    ){
        try {

            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("properties",properties);
            callOptions.put("feature",feature);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_EchoHeaders_getHeadersBackFromDigestAuthentication");
            new InvocationHandler().invoke("com_baeldung_jersey_server_EchoHeaders_getHeadersBackFromDigestAuthentication",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_EchoHeaders_getHeadersBackFromDigestAuthentication"+ e);
        }
        return this;
    }



    public com_baeldung_jersey_server_EchoHeaders_getHeadersBackFromDigestAuthentication execute(CallFuture<javax.ws.rs.core.Response> future){
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_EchoHeaders_getHeadersBackFromDigestAuthentication");
            new InvocationHandler().invoke("com_baeldung_jersey_server_EchoHeaders_getHeadersBackFromDigestAuthentication",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_EchoHeaders_getHeadersBackFromDigestAuthentication"+ e);
        }
        return this;
 }


    public  com_baeldung_jersey_server_EchoHeaders_getHeadersBackFromDigestAuthentication execute(Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler  )throws Exception{
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            CallFuture<javax.ws.rs.core.Response> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_server_EchoHeaders_getHeadersBackFromDigestAuthentication");
            new InvocationHandler().invoke("com_baeldung_jersey_server_EchoHeaders_getHeadersBackFromDigestAuthentication",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_server_EchoHeaders_getHeadersBackFromDigestAuthentication"+ e);
          resultHandler.handle(Future.handleError(e));
       }
       return this;
    }




 }

public static class com_baeldung_jersey_server_EchoHeaders_getServerSentEvents {

    javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters = new javax.ws.rs.core.MultivaluedHashMap();
    javax.ws.rs.core.MultivaluedMap<String, Object> headers = new javax.ws.rs.core.MultivaluedHashMap<>();
    //List<Object> entities  = new ArrayList<>();
    //javax.ws.rs.client.Entity<?> entity ;
    javax.ws.rs.core.MediaType produce =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    javax.ws.rs.core.MediaType consume =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    HashMap<String ,Object> properties = new HashMap<>();
    org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature  = null;

    //Class<?> response;


    CallFuture< javax.ws.rs.core.Response> future = new CallFuture<>();

    public javax.ws.rs.core.Response get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_server_EchoHeaders_getServerSentEvents then(Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_server_EchoHeaders_getServerSentEvents then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_server_EchoHeaders_getServerSentEvents then(IListener o,Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_server_EchoHeaders_getServerSentEvents then(IListener o ,CallFuture<javax.ws.rs.core.Response> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }


    public com_baeldung_jersey_server_EchoHeaders_getServerSentEvents addParameters(javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters){
        this.parameters = parameters;
        return this;
    }

    public com_baeldung_jersey_server_EchoHeaders_getServerSentEvents addParameter(org.softauto.jaxrs.ParamType paramType, String key,String value){
            Map<String,String> m = new HashMap<>();
            m.put(key,value);
            parameters.add(paramType.name(),m);
            return this;
        }

    public com_baeldung_jersey_server_EchoHeaders_getServerSentEvents addHeader(String key,String value){
        headers.add(key,value);
        return this;
    }

    public com_baeldung_jersey_server_EchoHeaders_getServerSentEvents addHeaders(javax.ws.rs.core.MultivaluedMap<String, Object> headers){
        this.headers = headers;
        return this;
    }

    //public com_baeldung_jersey_server_EchoHeaders_getServerSentEvents setEntity(javax.ws.rs.client.Entity<?> entity){
    //    this.entities.add(entity);
    //    return this;
    //}

    public com_baeldung_jersey_server_EchoHeaders_getServerSentEvents setProduce(javax.ws.rs.core.MediaType mediaType){
        this.produce = mediaType;
        return this;
    }

    public com_baeldung_jersey_server_EchoHeaders_getServerSentEvents setConsume(javax.ws.rs.core.MediaType mediaType){
        this.consume = mediaType;
        return this;
    }

    //public com_baeldung_jersey_server_EchoHeaders_getServerSentEvents setResponse(Class<?> response){
     //   this.response = response;
     //   return this;
   // }

   public com_baeldung_jersey_server_EchoHeaders_getServerSentEvents addProperty(String key,Object value){
           properties.put(key,value);
           return this;
       }

    public com_baeldung_jersey_server_EchoHeaders_getServerSentEvents authentication(org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature){
            this.feature = feature;
            return this;
    }

    public com_baeldung_jersey_server_EchoHeaders_getServerSentEvents execute(    ){
        try {

            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("properties",properties);
            callOptions.put("feature",feature);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_EchoHeaders_getServerSentEvents");
            new InvocationHandler().invoke("com_baeldung_jersey_server_EchoHeaders_getServerSentEvents",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_EchoHeaders_getServerSentEvents"+ e);
        }
        return this;
    }



    public com_baeldung_jersey_server_EchoHeaders_getServerSentEvents execute(CallFuture<javax.ws.rs.core.Response> future){
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_EchoHeaders_getServerSentEvents");
            new InvocationHandler().invoke("com_baeldung_jersey_server_EchoHeaders_getServerSentEvents",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_EchoHeaders_getServerSentEvents"+ e);
        }
        return this;
 }


    public  com_baeldung_jersey_server_EchoHeaders_getServerSentEvents execute(Handler<AsyncResult<javax.ws.rs.core.Response>> resultHandler  )throws Exception{
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            CallFuture<javax.ws.rs.core.Response> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_server_EchoHeaders_getServerSentEvents");
            new InvocationHandler().invoke("com_baeldung_jersey_server_EchoHeaders_getServerSentEvents",new Object[]{},new Class[]{},future,"JAXRS",callOptions);
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_server_EchoHeaders_getServerSentEvents"+ e);
          resultHandler.handle(Future.handleError(e));
       }
       return this;
    }




 }

public static class com_baeldung_jersey_server_Items_readCookieParam {

    javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters = new javax.ws.rs.core.MultivaluedHashMap();
    javax.ws.rs.core.MultivaluedMap<String, Object> headers = new javax.ws.rs.core.MultivaluedHashMap<>();
    //List<Object> entities  = new ArrayList<>();
    //javax.ws.rs.client.Entity<?> entity ;
    javax.ws.rs.core.MediaType produce =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    javax.ws.rs.core.MediaType consume =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    HashMap<String ,Object> properties = new HashMap<>();
    org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature  = null;

    //Class<?> response;


    CallFuture< java.lang.String> future = new CallFuture<>();

    public java.lang.String get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_server_Items_readCookieParam then(Handler<AsyncResult<java.lang.String>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_server_Items_readCookieParam then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_server_Items_readCookieParam then(IListener o,Handler<AsyncResult<java.lang.String>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_server_Items_readCookieParam then(IListener o ,CallFuture<java.lang.String> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }


    public com_baeldung_jersey_server_Items_readCookieParam addParameters(javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters){
        this.parameters = parameters;
        return this;
    }

    public com_baeldung_jersey_server_Items_readCookieParam addParameter(org.softauto.jaxrs.ParamType paramType, String key,String value){
            Map<String,String> m = new HashMap<>();
            m.put(key,value);
            parameters.add(paramType.name(),m);
            return this;
        }

    public com_baeldung_jersey_server_Items_readCookieParam addHeader(String key,String value){
        headers.add(key,value);
        return this;
    }

    public com_baeldung_jersey_server_Items_readCookieParam addHeaders(javax.ws.rs.core.MultivaluedMap<String, Object> headers){
        this.headers = headers;
        return this;
    }

    //public com_baeldung_jersey_server_Items_readCookieParam setEntity(javax.ws.rs.client.Entity<?> entity){
    //    this.entities.add(entity);
    //    return this;
    //}

    public com_baeldung_jersey_server_Items_readCookieParam setProduce(javax.ws.rs.core.MediaType mediaType){
        this.produce = mediaType;
        return this;
    }

    public com_baeldung_jersey_server_Items_readCookieParam setConsume(javax.ws.rs.core.MediaType mediaType){
        this.consume = mediaType;
        return this;
    }

    //public com_baeldung_jersey_server_Items_readCookieParam setResponse(Class<?> response){
     //   this.response = response;
     //   return this;
   // }

   public com_baeldung_jersey_server_Items_readCookieParam addProperty(String key,Object value){
           properties.put(key,value);
           return this;
       }

    public com_baeldung_jersey_server_Items_readCookieParam authentication(org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature){
            this.feature = feature;
            return this;
    }

    public com_baeldung_jersey_server_Items_readCookieParam execute(java.lang.String cookieParamToRead    ){
        try {

            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("properties",properties);
            callOptions.put("feature",feature);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Items_readCookieParam");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Items_readCookieParam",new Object[]{cookieParamToRead},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Items_readCookieParam"+ e);
        }
        return this;
    }



    public com_baeldung_jersey_server_Items_readCookieParam execute(java.lang.String cookieParamToRead,CallFuture<java.lang.String> future){
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Items_readCookieParam");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Items_readCookieParam",new Object[]{cookieParamToRead},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Items_readCookieParam"+ e);
        }
        return this;
 }


    public  com_baeldung_jersey_server_Items_readCookieParam execute(java.lang.String cookieParamToRead,Handler<AsyncResult<java.lang.String>> resultHandler  )throws Exception{
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            CallFuture<java.lang.String> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_server_Items_readCookieParam");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Items_readCookieParam",new Object[]{cookieParamToRead},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_server_Items_readCookieParam"+ e);
          resultHandler.handle(Future.handleError(e));
       }
       return this;
    }




 }

public static class com_baeldung_jersey_server_Items_readHeaderParam {

    javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters = new javax.ws.rs.core.MultivaluedHashMap();
    javax.ws.rs.core.MultivaluedMap<String, Object> headers = new javax.ws.rs.core.MultivaluedHashMap<>();
    //List<Object> entities  = new ArrayList<>();
    //javax.ws.rs.client.Entity<?> entity ;
    javax.ws.rs.core.MediaType produce =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    javax.ws.rs.core.MediaType consume =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    HashMap<String ,Object> properties = new HashMap<>();
    org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature  = null;

    //Class<?> response;


    CallFuture< java.lang.String> future = new CallFuture<>();

    public java.lang.String get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_server_Items_readHeaderParam then(Handler<AsyncResult<java.lang.String>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_server_Items_readHeaderParam then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_server_Items_readHeaderParam then(IListener o,Handler<AsyncResult<java.lang.String>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_server_Items_readHeaderParam then(IListener o ,CallFuture<java.lang.String> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }


    public com_baeldung_jersey_server_Items_readHeaderParam addParameters(javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters){
        this.parameters = parameters;
        return this;
    }

    public com_baeldung_jersey_server_Items_readHeaderParam addParameter(org.softauto.jaxrs.ParamType paramType, String key,String value){
            Map<String,String> m = new HashMap<>();
            m.put(key,value);
            parameters.add(paramType.name(),m);
            return this;
        }

    public com_baeldung_jersey_server_Items_readHeaderParam addHeader(String key,String value){
        headers.add(key,value);
        return this;
    }

    public com_baeldung_jersey_server_Items_readHeaderParam addHeaders(javax.ws.rs.core.MultivaluedMap<String, Object> headers){
        this.headers = headers;
        return this;
    }

    //public com_baeldung_jersey_server_Items_readHeaderParam setEntity(javax.ws.rs.client.Entity<?> entity){
    //    this.entities.add(entity);
    //    return this;
    //}

    public com_baeldung_jersey_server_Items_readHeaderParam setProduce(javax.ws.rs.core.MediaType mediaType){
        this.produce = mediaType;
        return this;
    }

    public com_baeldung_jersey_server_Items_readHeaderParam setConsume(javax.ws.rs.core.MediaType mediaType){
        this.consume = mediaType;
        return this;
    }

    //public com_baeldung_jersey_server_Items_readHeaderParam setResponse(Class<?> response){
     //   this.response = response;
     //   return this;
   // }

   public com_baeldung_jersey_server_Items_readHeaderParam addProperty(String key,Object value){
           properties.put(key,value);
           return this;
       }

    public com_baeldung_jersey_server_Items_readHeaderParam authentication(org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature){
            this.feature = feature;
            return this;
    }

    public com_baeldung_jersey_server_Items_readHeaderParam execute(java.lang.String headerParamToRead    ){
        try {

            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("properties",properties);
            callOptions.put("feature",feature);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Items_readHeaderParam");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Items_readHeaderParam",new Object[]{headerParamToRead},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Items_readHeaderParam"+ e);
        }
        return this;
    }



    public com_baeldung_jersey_server_Items_readHeaderParam execute(java.lang.String headerParamToRead,CallFuture<java.lang.String> future){
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Items_readHeaderParam");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Items_readHeaderParam",new Object[]{headerParamToRead},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Items_readHeaderParam"+ e);
        }
        return this;
 }


    public  com_baeldung_jersey_server_Items_readHeaderParam execute(java.lang.String headerParamToRead,Handler<AsyncResult<java.lang.String>> resultHandler  )throws Exception{
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            CallFuture<java.lang.String> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_server_Items_readHeaderParam");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Items_readHeaderParam",new Object[]{headerParamToRead},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_server_Items_readHeaderParam"+ e);
          resultHandler.handle(Future.handleError(e));
       }
       return this;
    }




 }

public static class com_baeldung_jersey_server_Items_readPathParam {

    javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters = new javax.ws.rs.core.MultivaluedHashMap();
    javax.ws.rs.core.MultivaluedMap<String, Object> headers = new javax.ws.rs.core.MultivaluedHashMap<>();
    //List<Object> entities  = new ArrayList<>();
    //javax.ws.rs.client.Entity<?> entity ;
    javax.ws.rs.core.MediaType produce =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    javax.ws.rs.core.MediaType consume =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    HashMap<String ,Object> properties = new HashMap<>();
    org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature  = null;

    //Class<?> response;


    CallFuture< java.lang.String> future = new CallFuture<>();

    public java.lang.String get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_server_Items_readPathParam then(Handler<AsyncResult<java.lang.String>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_server_Items_readPathParam then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_server_Items_readPathParam then(IListener o,Handler<AsyncResult<java.lang.String>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_server_Items_readPathParam then(IListener o ,CallFuture<java.lang.String> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }


    public com_baeldung_jersey_server_Items_readPathParam addParameters(javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters){
        this.parameters = parameters;
        return this;
    }

    public com_baeldung_jersey_server_Items_readPathParam addParameter(org.softauto.jaxrs.ParamType paramType, String key,String value){
            Map<String,String> m = new HashMap<>();
            m.put(key,value);
            parameters.add(paramType.name(),m);
            return this;
        }

    public com_baeldung_jersey_server_Items_readPathParam addHeader(String key,String value){
        headers.add(key,value);
        return this;
    }

    public com_baeldung_jersey_server_Items_readPathParam addHeaders(javax.ws.rs.core.MultivaluedMap<String, Object> headers){
        this.headers = headers;
        return this;
    }

    //public com_baeldung_jersey_server_Items_readPathParam setEntity(javax.ws.rs.client.Entity<?> entity){
    //    this.entities.add(entity);
    //    return this;
    //}

    public com_baeldung_jersey_server_Items_readPathParam setProduce(javax.ws.rs.core.MediaType mediaType){
        this.produce = mediaType;
        return this;
    }

    public com_baeldung_jersey_server_Items_readPathParam setConsume(javax.ws.rs.core.MediaType mediaType){
        this.consume = mediaType;
        return this;
    }

    //public com_baeldung_jersey_server_Items_readPathParam setResponse(Class<?> response){
     //   this.response = response;
     //   return this;
   // }

   public com_baeldung_jersey_server_Items_readPathParam addProperty(String key,Object value){
           properties.put(key,value);
           return this;
       }

    public com_baeldung_jersey_server_Items_readPathParam authentication(org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature){
            this.feature = feature;
            return this;
    }

    public com_baeldung_jersey_server_Items_readPathParam execute(java.lang.String pathParamToRead    ){
        try {

            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("properties",properties);
            callOptions.put("feature",feature);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Items_readPathParam");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Items_readPathParam",new Object[]{pathParamToRead},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Items_readPathParam"+ e);
        }
        return this;
    }



    public com_baeldung_jersey_server_Items_readPathParam execute(java.lang.String pathParamToRead,CallFuture<java.lang.String> future){
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Items_readPathParam");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Items_readPathParam",new Object[]{pathParamToRead},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Items_readPathParam"+ e);
        }
        return this;
 }


    public  com_baeldung_jersey_server_Items_readPathParam execute(java.lang.String pathParamToRead,Handler<AsyncResult<java.lang.String>> resultHandler  )throws Exception{
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            CallFuture<java.lang.String> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_server_Items_readPathParam");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Items_readPathParam",new Object[]{pathParamToRead},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_server_Items_readPathParam"+ e);
          resultHandler.handle(Future.handleError(e));
       }
       return this;
    }




 }

public static class com_baeldung_jersey_server_Items_readQueryParam {

    javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters = new javax.ws.rs.core.MultivaluedHashMap();
    javax.ws.rs.core.MultivaluedMap<String, Object> headers = new javax.ws.rs.core.MultivaluedHashMap<>();
    //List<Object> entities  = new ArrayList<>();
    //javax.ws.rs.client.Entity<?> entity ;
    javax.ws.rs.core.MediaType produce =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    javax.ws.rs.core.MediaType consume =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    HashMap<String ,Object> properties = new HashMap<>();
    org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature  = null;

    //Class<?> response;


    CallFuture< java.lang.String> future = new CallFuture<>();

    public java.lang.String get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_server_Items_readQueryParam then(Handler<AsyncResult<java.lang.String>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_server_Items_readQueryParam then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_server_Items_readQueryParam then(IListener o,Handler<AsyncResult<java.lang.String>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_server_Items_readQueryParam then(IListener o ,CallFuture<java.lang.String> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }


    public com_baeldung_jersey_server_Items_readQueryParam addParameters(javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters){
        this.parameters = parameters;
        return this;
    }

    public com_baeldung_jersey_server_Items_readQueryParam addParameter(org.softauto.jaxrs.ParamType paramType, String key,String value){
            Map<String,String> m = new HashMap<>();
            m.put(key,value);
            parameters.add(paramType.name(),m);
            return this;
        }

    public com_baeldung_jersey_server_Items_readQueryParam addHeader(String key,String value){
        headers.add(key,value);
        return this;
    }

    public com_baeldung_jersey_server_Items_readQueryParam addHeaders(javax.ws.rs.core.MultivaluedMap<String, Object> headers){
        this.headers = headers;
        return this;
    }

    //public com_baeldung_jersey_server_Items_readQueryParam setEntity(javax.ws.rs.client.Entity<?> entity){
    //    this.entities.add(entity);
    //    return this;
    //}

    public com_baeldung_jersey_server_Items_readQueryParam setProduce(javax.ws.rs.core.MediaType mediaType){
        this.produce = mediaType;
        return this;
    }

    public com_baeldung_jersey_server_Items_readQueryParam setConsume(javax.ws.rs.core.MediaType mediaType){
        this.consume = mediaType;
        return this;
    }

    //public com_baeldung_jersey_server_Items_readQueryParam setResponse(Class<?> response){
     //   this.response = response;
     //   return this;
   // }

   public com_baeldung_jersey_server_Items_readQueryParam addProperty(String key,Object value){
           properties.put(key,value);
           return this;
       }

    public com_baeldung_jersey_server_Items_readQueryParam authentication(org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature){
            this.feature = feature;
            return this;
    }

    public com_baeldung_jersey_server_Items_readQueryParam execute(java.lang.String queryParamToRead    ){
        try {

            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("properties",properties);
            callOptions.put("feature",feature);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Items_readQueryParam");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Items_readQueryParam",new Object[]{queryParamToRead},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Items_readQueryParam"+ e);
        }
        return this;
    }



    public com_baeldung_jersey_server_Items_readQueryParam execute(java.lang.String queryParamToRead,CallFuture<java.lang.String> future){
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Items_readQueryParam");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Items_readQueryParam",new Object[]{queryParamToRead},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Items_readQueryParam"+ e);
        }
        return this;
 }


    public  com_baeldung_jersey_server_Items_readQueryParam execute(java.lang.String queryParamToRead,Handler<AsyncResult<java.lang.String>> resultHandler  )throws Exception{
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            CallFuture<java.lang.String> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_server_Items_readQueryParam");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Items_readQueryParam",new Object[]{queryParamToRead},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_server_Items_readQueryParam"+ e);
          resultHandler.handle(Future.handleError(e));
       }
       return this;
    }




 }

public static class com_baeldung_jersey_server_Items_readFormParam {

    javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters = new javax.ws.rs.core.MultivaluedHashMap();
    javax.ws.rs.core.MultivaluedMap<String, Object> headers = new javax.ws.rs.core.MultivaluedHashMap<>();
    //List<Object> entities  = new ArrayList<>();
    //javax.ws.rs.client.Entity<?> entity ;
    javax.ws.rs.core.MediaType produce =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    javax.ws.rs.core.MediaType consume =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    HashMap<String ,Object> properties = new HashMap<>();
    org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature  = null;

    //Class<?> response;


    CallFuture< java.lang.String> future = new CallFuture<>();

    public java.lang.String get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_server_Items_readFormParam then(Handler<AsyncResult<java.lang.String>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_server_Items_readFormParam then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_server_Items_readFormParam then(IListener o,Handler<AsyncResult<java.lang.String>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_server_Items_readFormParam then(IListener o ,CallFuture<java.lang.String> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }


    public com_baeldung_jersey_server_Items_readFormParam addParameters(javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters){
        this.parameters = parameters;
        return this;
    }

    public com_baeldung_jersey_server_Items_readFormParam addParameter(org.softauto.jaxrs.ParamType paramType, String key,String value){
            Map<String,String> m = new HashMap<>();
            m.put(key,value);
            parameters.add(paramType.name(),m);
            return this;
        }

    public com_baeldung_jersey_server_Items_readFormParam addHeader(String key,String value){
        headers.add(key,value);
        return this;
    }

    public com_baeldung_jersey_server_Items_readFormParam addHeaders(javax.ws.rs.core.MultivaluedMap<String, Object> headers){
        this.headers = headers;
        return this;
    }

    //public com_baeldung_jersey_server_Items_readFormParam setEntity(javax.ws.rs.client.Entity<?> entity){
    //    this.entities.add(entity);
    //    return this;
    //}

    public com_baeldung_jersey_server_Items_readFormParam setProduce(javax.ws.rs.core.MediaType mediaType){
        this.produce = mediaType;
        return this;
    }

    public com_baeldung_jersey_server_Items_readFormParam setConsume(javax.ws.rs.core.MediaType mediaType){
        this.consume = mediaType;
        return this;
    }

    //public com_baeldung_jersey_server_Items_readFormParam setResponse(Class<?> response){
     //   this.response = response;
     //   return this;
   // }

   public com_baeldung_jersey_server_Items_readFormParam addProperty(String key,Object value){
           properties.put(key,value);
           return this;
       }

    public com_baeldung_jersey_server_Items_readFormParam authentication(org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature){
            this.feature = feature;
            return this;
    }

    public com_baeldung_jersey_server_Items_readFormParam execute(java.lang.String formParamToRead    ){
        try {

            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("properties",properties);
            callOptions.put("feature",feature);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Items_readFormParam");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Items_readFormParam",new Object[]{formParamToRead},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Items_readFormParam"+ e);
        }
        return this;
    }



    public com_baeldung_jersey_server_Items_readFormParam execute(java.lang.String formParamToRead,CallFuture<java.lang.String> future){
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Items_readFormParam");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Items_readFormParam",new Object[]{formParamToRead},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Items_readFormParam"+ e);
        }
        return this;
 }


    public  com_baeldung_jersey_server_Items_readFormParam execute(java.lang.String formParamToRead,Handler<AsyncResult<java.lang.String>> resultHandler  )throws Exception{
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            CallFuture<java.lang.String> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_server_Items_readFormParam");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Items_readFormParam",new Object[]{formParamToRead},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_server_Items_readFormParam"+ e);
          resultHandler.handle(Future.handleError(e));
       }
       return this;
    }




 }

public static class com_baeldung_jersey_server_Items_readMatrixParam {

    javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters = new javax.ws.rs.core.MultivaluedHashMap();
    javax.ws.rs.core.MultivaluedMap<String, Object> headers = new javax.ws.rs.core.MultivaluedHashMap<>();
    //List<Object> entities  = new ArrayList<>();
    //javax.ws.rs.client.Entity<?> entity ;
    javax.ws.rs.core.MediaType produce =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    javax.ws.rs.core.MediaType consume =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    HashMap<String ,Object> properties = new HashMap<>();
    org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature  = null;

    //Class<?> response;


    CallFuture< java.lang.String> future = new CallFuture<>();

    public java.lang.String get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_server_Items_readMatrixParam then(Handler<AsyncResult<java.lang.String>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_server_Items_readMatrixParam then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_server_Items_readMatrixParam then(IListener o,Handler<AsyncResult<java.lang.String>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_server_Items_readMatrixParam then(IListener o ,CallFuture<java.lang.String> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }


    public com_baeldung_jersey_server_Items_readMatrixParam addParameters(javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters){
        this.parameters = parameters;
        return this;
    }

    public com_baeldung_jersey_server_Items_readMatrixParam addParameter(org.softauto.jaxrs.ParamType paramType, String key,String value){
            Map<String,String> m = new HashMap<>();
            m.put(key,value);
            parameters.add(paramType.name(),m);
            return this;
        }

    public com_baeldung_jersey_server_Items_readMatrixParam addHeader(String key,String value){
        headers.add(key,value);
        return this;
    }

    public com_baeldung_jersey_server_Items_readMatrixParam addHeaders(javax.ws.rs.core.MultivaluedMap<String, Object> headers){
        this.headers = headers;
        return this;
    }

    //public com_baeldung_jersey_server_Items_readMatrixParam setEntity(javax.ws.rs.client.Entity<?> entity){
    //    this.entities.add(entity);
    //    return this;
    //}

    public com_baeldung_jersey_server_Items_readMatrixParam setProduce(javax.ws.rs.core.MediaType mediaType){
        this.produce = mediaType;
        return this;
    }

    public com_baeldung_jersey_server_Items_readMatrixParam setConsume(javax.ws.rs.core.MediaType mediaType){
        this.consume = mediaType;
        return this;
    }

    //public com_baeldung_jersey_server_Items_readMatrixParam setResponse(Class<?> response){
     //   this.response = response;
     //   return this;
   // }

   public com_baeldung_jersey_server_Items_readMatrixParam addProperty(String key,Object value){
           properties.put(key,value);
           return this;
       }

    public com_baeldung_jersey_server_Items_readMatrixParam authentication(org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature){
            this.feature = feature;
            return this;
    }

    public com_baeldung_jersey_server_Items_readMatrixParam execute(java.lang.String matrixParamToRead    ){
        try {

            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("properties",properties);
            callOptions.put("feature",feature);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Items_readMatrixParam");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Items_readMatrixParam",new Object[]{matrixParamToRead},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Items_readMatrixParam"+ e);
        }
        return this;
    }



    public com_baeldung_jersey_server_Items_readMatrixParam execute(java.lang.String matrixParamToRead,CallFuture<java.lang.String> future){
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Items_readMatrixParam");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Items_readMatrixParam",new Object[]{matrixParamToRead},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Items_readMatrixParam"+ e);
        }
        return this;
 }


    public  com_baeldung_jersey_server_Items_readMatrixParam execute(java.lang.String matrixParamToRead,Handler<AsyncResult<java.lang.String>> resultHandler  )throws Exception{
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            CallFuture<java.lang.String> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_server_Items_readMatrixParam");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Items_readMatrixParam",new Object[]{matrixParamToRead},new Class[]{java.lang.String.class},future,"JAXRS",callOptions);
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_server_Items_readMatrixParam"+ e);
          resultHandler.handle(Future.handleError(e));
       }
       return this;
    }




 }

public static class com_baeldung_jersey_server_Items_readBeanParam {

    javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters = new javax.ws.rs.core.MultivaluedHashMap();
    javax.ws.rs.core.MultivaluedMap<String, Object> headers = new javax.ws.rs.core.MultivaluedHashMap<>();
    //List<Object> entities  = new ArrayList<>();
    //javax.ws.rs.client.Entity<?> entity ;
    javax.ws.rs.core.MediaType produce =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    javax.ws.rs.core.MediaType consume =  javax.ws.rs.core.MediaType.APPLICATION_JSON_TYPE;
    HashMap<String ,Object> properties = new HashMap<>();
    org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature  = null;

    //Class<?> response;


    CallFuture< java.lang.String> future = new CallFuture<>();

    public java.lang.String get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_server_Items_readBeanParam then(Handler<AsyncResult<java.lang.String>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_server_Items_readBeanParam then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_server_Items_readBeanParam then(IListener o,Handler<AsyncResult<java.lang.String>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_server_Items_readBeanParam then(IListener o ,CallFuture<java.lang.String> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }


    public com_baeldung_jersey_server_Items_readBeanParam addParameters(javax.ws.rs.core.MultivaluedMap<String, Map<String,String>> parameters){
        this.parameters = parameters;
        return this;
    }

    public com_baeldung_jersey_server_Items_readBeanParam addParameter(org.softauto.jaxrs.ParamType paramType, String key,String value){
            Map<String,String> m = new HashMap<>();
            m.put(key,value);
            parameters.add(paramType.name(),m);
            return this;
        }

    public com_baeldung_jersey_server_Items_readBeanParam addHeader(String key,String value){
        headers.add(key,value);
        return this;
    }

    public com_baeldung_jersey_server_Items_readBeanParam addHeaders(javax.ws.rs.core.MultivaluedMap<String, Object> headers){
        this.headers = headers;
        return this;
    }

    //public com_baeldung_jersey_server_Items_readBeanParam setEntity(javax.ws.rs.client.Entity<?> entity){
    //    this.entities.add(entity);
    //    return this;
    //}

    public com_baeldung_jersey_server_Items_readBeanParam setProduce(javax.ws.rs.core.MediaType mediaType){
        this.produce = mediaType;
        return this;
    }

    public com_baeldung_jersey_server_Items_readBeanParam setConsume(javax.ws.rs.core.MediaType mediaType){
        this.consume = mediaType;
        return this;
    }

    //public com_baeldung_jersey_server_Items_readBeanParam setResponse(Class<?> response){
     //   this.response = response;
     //   return this;
   // }

   public com_baeldung_jersey_server_Items_readBeanParam addProperty(String key,Object value){
           properties.put(key,value);
           return this;
       }

    public com_baeldung_jersey_server_Items_readBeanParam authentication(org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature){
            this.feature = feature;
            return this;
    }

    public com_baeldung_jersey_server_Items_readBeanParam execute(com.baeldung.jersey.server.ItemParam itemParam    ){
        try {

            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("properties",properties);
            callOptions.put("feature",feature);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Items_readBeanParam");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Items_readBeanParam",new Object[]{itemParam},new Class[]{com.baeldung.jersey.server.ItemParam.class},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Items_readBeanParam"+ e);
        }
        return this;
    }



    public com_baeldung_jersey_server_Items_readBeanParam execute(com.baeldung.jersey.server.ItemParam itemParam,CallFuture<java.lang.String> future){
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            logger.debug("invoking proxy for com_baeldung_jersey_server_Items_readBeanParam");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Items_readBeanParam",new Object[]{itemParam},new Class[]{com.baeldung.jersey.server.ItemParam.class},future,"JAXRS",callOptions);
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_Items_readBeanParam"+ e);
        }
        return this;
 }


    public  com_baeldung_jersey_server_Items_readBeanParam execute(com.baeldung.jersey.server.ItemParam itemParam,Handler<AsyncResult<java.lang.String>> resultHandler  )throws Exception{
        try {
            HashMap<String,Object> callOptions = new HashMap<>();
            callOptions.put("parameters",parameters);
            callOptions.put("headers",headers);
            //callOptions.put("entity",entities);
            callOptions.put("produce",produce);
            callOptions.put("consume",consume);
            callOptions.put("feature",feature);
            callOptions.put("properties",properties);
            //callOptions.put("response",response);
            CallFuture<java.lang.String> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_server_Items_readBeanParam");
            new InvocationHandler().invoke("com_baeldung_jersey_server_Items_readBeanParam",new Object[]{itemParam},new Class[]{com.baeldung.jersey.server.ItemParam.class},future,"JAXRS",callOptions);
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_server_Items_readBeanParam"+ e);
          resultHandler.handle(Future.handleError(e));
       }
       return this;
    }




 }

public static class com_baeldung_jersey_server_model_Person_Person {

    CallFuture< com.baeldung.jersey.server.model.Person> future = new CallFuture<>();
    public com.baeldung.jersey.server.model.Person get_Result() throws Exception{
            try {

               if(!future.isDone()) {
                  logger.debug("waiting to future to be done");
                  future.await();
               }
                logger.debug("successfully get_Result() ");
                return future.get();
             }catch (Exception e){
                 logger.error("fail get_Result() "+ e);
                 throw new Exception("fail get_Result() "+ e);
             }
        }

    public  com_baeldung_jersey_server_model_Person_Person then(Handler<AsyncResult<com.baeldung.jersey.server.model.Person>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }


    public  com_baeldung_jersey_server_model_Person_Person then(IListener o)throws Exception{
        future.handleResult(future.get());

        return this;
    }

    public  com_baeldung_jersey_server_model_Person_Person then(IListener o,Handler<AsyncResult<com.baeldung.jersey.server.model.Person>> resultHandler)throws Exception{
        resultHandler.handle(Future.handleResult(future.get()));
        return this;
    }

    public  com_baeldung_jersey_server_model_Person_Person then(IListener o ,CallFuture<com.baeldung.jersey.server.model.Person> future)throws Exception{
        future.handleResult(future.get());
        return this;
    }





    public com_baeldung_jersey_server_model_Person_Person(java.lang.String name, java.lang.String address    ){
        try {
            logger.debug("invoking proxy for com_baeldung_jersey_server_model_Person_Person");
            new InvocationHandler().invoke("com_baeldung_jersey_server_model_Person_Person",new Object[]{name,address},new Class[]{java.lang.String.class,java.lang.String.class},future,"RPC");
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_model_Person_Person"+ e);
        }
    }



    public com_baeldung_jersey_server_model_Person_Person(java.lang.String name, java.lang.String address,CallFuture<com.baeldung.jersey.server.model.Person> future){
        try {
            logger.debug("invoking proxy for com_baeldung_jersey_server_model_Person_Person");
            new InvocationHandler().invoke("com_baeldung_jersey_server_model_Person_Person",new Object[]{name,address},new Class[]{java.lang.String.class,java.lang.String.class},future,"RPC");
        }catch (Exception e){
             logger.error("fail invoke for com_baeldung_jersey_server_model_Person_Person"+ e);
        }
 }


    public  com_baeldung_jersey_server_model_Person_Person(java.lang.String name, java.lang.String address,Handler<AsyncResult<com.baeldung.jersey.server.model.Person>> resultHandler  )throws Exception{
        try {
            CallFuture<com.baeldung.jersey.server.model.Person> future = new CallFuture<>();
            logger.debug("invoking proxy for com_baeldung_jersey_server_model_Person_Person");
            new InvocationHandler().invoke("com_baeldung_jersey_server_model_Person_Person",new Object[]{name,address},new Class[]{java.lang.String.class,java.lang.String.class},future,"RPC");
            resultHandler.handle(Future.handleResult(future.get()));
       }catch (Exception e){
          logger.error("fail invoke for com_baeldung_jersey_server_model_Person_Person"+ e);
          resultHandler.handle(Future.handleError(e));
       }
    }




 }
}