/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package tests.infrastructure;
import java.util.function.Function;
import org.apache.logging.log4j.Level;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.TimeUnit;
import org.softauto.core.AsyncResult;
import org.softauto.core.Handler;
import org.softauto.core.Future;
import org.softauto.serializer.CallFuture;


@org.apache.avro.specific.AvroGenerated
public class Listener {

    private static org.apache.logging.log4j.Logger logger = org.apache.logging.log4j.LogManager.getLogger(Listener.class);
    public static long timeOutInMin = 1;


    public static void setTimeOut(long min){
        timeOutInMin = min;
    }


public static class app_example_books_BookCatalog_addBook{
    private static app_example_books_BookCatalog_addBook app_example_books_BookCatalog_addBook= null;
    static boolean seen = false;
    static CountDownLatch lock = new CountDownLatch(0);
    static CountDownLatch lockForResult = new CountDownLatch(0);
    static app.example.books.Book book = null;

    public     java.lang.Object[] app_example_books_BookCatalog_addBook(app.example.books.Book book    ){
     LogManager.getLogger().log(Level.getLevel("INFO [SUT]"), " app_example_books_BookCatalog_addBook args :"  +" book:" + book       );

       return new Object[]{};

    }


    public static app_example_books_BookCatalog_addBook waitTo(){
    if(app_example_books_BookCatalog_addBook == null){
            try{
                logger.debug("waiting for app_example_books_BookCatalog_addBook");
                app_example_books_BookCatalog_addBook = new app_example_books_BookCatalog_addBook();
                lock = new CountDownLatch(1);
                app_example_books_BookCatalog_addBook _waitTo =  new app_example_books_BookCatalog_addBook(){
                        @Override
                        public Object[] app_example_books_BookCatalog_addBook(app.example.books.Book book){
                        try{
                            logger.debug("done waiting for app_example_books_BookCatalog_addBook");
                            lock.countDown();
                            seen = true;
                            logger.debug("got call for app_example_books_BookCatalog_addBook seen:"+seen);
                            app_example_books_BookCatalog_addBook.book = app_example_books_BookCatalog_addBook.book == null ? book : app_example_books_BookCatalog_addBook.book;
                            return new Object[]{app_example_books_BookCatalog_addBook.book            };
                        }catch (Exception e){
                                 logger.error("fail waitTo ",e);
                        }
                        return new Object[]{};
                    }
                };
                 {
                      org.softauto.listener.server.ListenerObserver.getInstance().register("app_example_books_BookCatalog_addBook", _waitTo);
                 }
                lock.await(timeOutInMin, TimeUnit.MINUTES);
                if(lock.getCount() > 0){
                     throw new Exception("timeOut for lock ");
                }
            }catch (Exception e){
               logger.error("fail waitTo ",e);
            }
        }
        logger.debug("successfully wait to app_example_books_BookCatalog_addBook");
        return app_example_books_BookCatalog_addBook;
    }

    public static void waitTo(Handler<AsyncResult<app_example_books_BookCatalog_addBook>> resultHandler){
    if(app_example_books_BookCatalog_addBook == null){
            try{
                logger.debug("waiting for app_example_books_BookCatalog_addBook");
                app_example_books_BookCatalog_addBook = new app_example_books_BookCatalog_addBook();
                lock = new CountDownLatch(1);
                lock.await(timeOutInMin, TimeUnit.MINUTES);
                app_example_books_BookCatalog_addBook _waitTo = new app_example_books_BookCatalog_addBook(){
                     @Override
                     public Object[] app_example_books_BookCatalog_addBook(                        app.example.books.Book book){
                    try{
                        logger.debug("done waiting for app_example_books_BookCatalog_addBook");
                        lock.countDown();
                        seen = true;
                        logger.debug("got call for app_example_books_BookCatalog_addBook seen:"+seen);
                         app_example_books_BookCatalog_addBook.book = app_example_books_BookCatalog_addBook.book == null ? book : app_example_books_BookCatalog_addBook.book;
                         return new Object[]{app_example_books_BookCatalog_addBook.book                            };
                         }catch (Exception e){
                               logger.error("fail waitTo ",e);
                         }
                         return new Object[]{};
                    }
            };
                {
                    org.softauto.listener.server.ListenerObserver.getInstance().register("app_example_books_BookCatalog_addBook", _waitTo);
                }
                lock.await(timeOutInMin, TimeUnit.MINUTES);
                if(lock.getCount() > 0){
                     throw new Exception("timeOut for lock ");
                }
                logger.debug("successfully wait to app_example_books_BookCatalog_addBook");
                resultHandler.handle(Future.handleResult(app_example_books_BookCatalog_addBook));
            }catch (Exception e){
               logger.error("fail waitTo ",e);
               resultHandler.handle(Future.handleError(e));
            }
        }

    }




    public app.example.books.Book getBook(){
        return app_example_books_BookCatalog_addBook.book;
    }

    public app_example_books_BookCatalog_addBook getBook(Handler<AsyncResult<app.example.books.Book>> resultHandler){
        resultHandler.handle(Future.handleResult(app_example_books_BookCatalog_addBook.book));
        return this;
    }

    public app_example_books_BookCatalog_addBook getBook(CallFuture<app.example.books.Book> future){
       future.handleResult(app_example_books_BookCatalog_addBook.book);
       return this;
    }

    public app_example_books_BookCatalog_addBook setBook(app.example.books.Book book){
        app_example_books_BookCatalog_addBook.book = book;
        return this;
    }





}


public static class app_example_books_Book_getTitle{
    private static app_example_books_Book_getTitle app_example_books_Book_getTitle= null;
    static boolean seen = false;
    static CountDownLatch lock = new CountDownLatch(0);
    static CountDownLatch lockForResult = new CountDownLatch(0);
    java.lang.String _result;

    public     java.lang.Object[] app_example_books_Book_getTitle(    ){
     LogManager.getLogger().log(Level.getLevel("INFO [SUT]"), " app_example_books_Book_getTitle args :"        );

       return new Object[]{            };

    }


    public static app_example_books_Book_getTitle waitTo(){
    if(app_example_books_Book_getTitle == null){
            try{
                logger.debug("waiting for app_example_books_Book_getTitle");
                app_example_books_Book_getTitle = new app_example_books_Book_getTitle();
                lock = new CountDownLatch(1);
                app_example_books_Book_getTitle _waitTo =  new app_example_books_Book_getTitle(){
                        @Override
                        public Object[] app_example_books_Book_getTitle(){
                        try{
                            logger.debug("done waiting for app_example_books_Book_getTitle");
                            lock.countDown();
                            seen = true;
                            logger.debug("got call for app_example_books_Book_getTitle seen:"+seen);
                            return new Object[]{            };
                        }catch (Exception e){
                                 logger.error("fail waitTo ",e);
                        }
                        return new Object[]{};
                    }
                };
                 {
                      org.softauto.listener.server.ListenerObserver.getInstance().register("app_example_books_Book_getTitle", _waitTo);
                 }
                lock.await(timeOutInMin, TimeUnit.MINUTES);
                if(lock.getCount() > 0){
                     throw new Exception("timeOut for lock ");
                }
            }catch (Exception e){
               logger.error("fail waitTo ",e);
            }
        }
        logger.debug("successfully wait to app_example_books_Book_getTitle");
        return app_example_books_Book_getTitle;
    }

    public static void waitTo(Handler<AsyncResult<app_example_books_Book_getTitle>> resultHandler){
    if(app_example_books_Book_getTitle == null){
            try{
                logger.debug("waiting for app_example_books_Book_getTitle");
                app_example_books_Book_getTitle = new app_example_books_Book_getTitle();
                lock = new CountDownLatch(1);
                lock.await(timeOutInMin, TimeUnit.MINUTES);
                app_example_books_Book_getTitle _waitTo = new app_example_books_Book_getTitle(){
                     @Override
                     public Object[] app_example_books_Book_getTitle(){
                    try{
                        logger.debug("done waiting for app_example_books_Book_getTitle");
                        lock.countDown();
                        seen = true;
                        logger.debug("got call for app_example_books_Book_getTitle seen:"+seen);
                         return new Object[]{                            };
                         }catch (Exception e){
                               logger.error("fail waitTo ",e);
                         }
                         return new Object[]{};
                    }
            };
                {
                    org.softauto.listener.server.ListenerObserver.getInstance().register("app_example_books_Book_getTitle", _waitTo);
                }
                lock.await(timeOutInMin, TimeUnit.MINUTES);
                if(lock.getCount() > 0){
                     throw new Exception("timeOut for lock ");
                }
                logger.debug("successfully wait to app_example_books_Book_getTitle");
                resultHandler.handle(Future.handleResult(app_example_books_Book_getTitle));
            }catch (Exception e){
               logger.error("fail waitTo ",e);
               resultHandler.handle(Future.handleError(e));
            }
        }

    }


    public static app_example_books_Book_getTitle waitToResult(){
    if(app_example_books_Book_getTitle == null){
            try{
                logger.debug("waiting for result of app_example_books_Book_getTitle");
                app_example_books_Book_getTitle = new app_example_books_Book_getTitle();
                lockForResult = new CountDownLatch(1);
                app_example_books_Book_getTitle _waitToResult = new app_example_books_Book_getTitle(){
                        public void app_example_books_Book_getTitle(java.lang.String result){
                        try{
                            logger.debug("done waiting for app_example_books_Book_getTitle");
                            lockForResult.countDown();
                            app_example_books_Book_getTitle._result = result;
                        }catch (Exception e){
                                logger.error("fail waitTo ",e);
                        }
                    }
                };
                {
                    org.softauto.listener.server.ListenerObserver.getInstance().register("app_example_books_Book_getTitle", _waitToResult);
                }
                lockForResult.await(timeOutInMin, TimeUnit.MINUTES);
                if(lockForResult.getCount() > 0){
                     throw new Exception("timeOut for lock ");
                }else {
                    logger.debug("successfully wait to app_example_books_Book_getTitle");
                }
            }catch (Exception e){
               logger.error("fail waitTo ",e);
            }
        }
        return app_example_books_Book_getTitle;
    }


    public static void waitToResult(Handler<AsyncResult<app_example_books_Book_getTitle>> resultHandler){
    if(app_example_books_Book_getTitle == null){
            try{
                logger.debug("waiting for result of app_example_books_Book_getTitle");
                app_example_books_Book_getTitle = new app_example_books_Book_getTitle();
                lockForResult = new CountDownLatch(1);
                app_example_books_Book_getTitle _waitToResult = new app_example_books_Book_getTitle(){
                public void app_example_books_Book_getTitle(java.lang.String result){
                try{
                   logger.debug("done waiting for app_example_books_Book_getTitle");
                   lockForResult.countDown();
                   app_example_books_Book_getTitle._result = result;
                }catch (Exception e){
                     logger.error("fail waitToResult ",e);
                }
         }
    };
                {
                   org.softauto.listener.server.ListenerObserver.getInstance().register("app_example_books_Book_getTitle", _waitToResult);
                }
                lockForResult.await(timeOutInMin, TimeUnit.MINUTES);
                if(lockForResult.getCount() > 0){
                   throw new Exception("timeOut for lock ");
                }else {
                    logger.debug("successfully wait to app_example_books_Book_getTitle");
                }
                resultHandler.handle(Future.handleResult(app_example_books_Book_getTitle));
            }catch (Exception e){
               logger.error("fail waitTo ",e);
               resultHandler.handle(Future.handleError(e));
            }
        }
    }



    public java.lang.String get_Result(){
        return _result;
    }

    public app_example_books_Book_getTitle get_Result(Handler<AsyncResult<java.lang.String>> resultHandler){
        try{
            resultHandler.handle(Future.handleResult(_result));
        }catch (Exception e){
          logger.error("fail  get_Result ",e);
          resultHandler.handle(Future.handleError(e));
        }
        logger.debug("successfully get_Result "+ _result);
        return this;
    }

    public app_example_books_Book_getTitle get_Result(CallFuture<java.lang.String> future){
         future.handleResult(_result);
         return this;
    }








}


public static class app_example_books_Book_setTitle{
    private static app_example_books_Book_setTitle app_example_books_Book_setTitle= null;
    static boolean seen = false;
    static CountDownLatch lock = new CountDownLatch(0);
    static CountDownLatch lockForResult = new CountDownLatch(0);
    static java.lang.String title = null;

    public     java.lang.Object[] app_example_books_Book_setTitle(java.lang.String title    ){
     LogManager.getLogger().log(Level.getLevel("INFO [SUT]"), " app_example_books_Book_setTitle args :"  +" title:" + title       );

       return new Object[]{};

    }


    public static app_example_books_Book_setTitle waitTo(){
    if(app_example_books_Book_setTitle == null){
            try{
                logger.debug("waiting for app_example_books_Book_setTitle");
                app_example_books_Book_setTitle = new app_example_books_Book_setTitle();
                lock = new CountDownLatch(1);
                app_example_books_Book_setTitle _waitTo =  new app_example_books_Book_setTitle(){
                        @Override
                        public Object[] app_example_books_Book_setTitle(java.lang.String title){
                        try{
                            logger.debug("done waiting for app_example_books_Book_setTitle");
                            lock.countDown();
                            seen = true;
                            logger.debug("got call for app_example_books_Book_setTitle seen:"+seen);
                            app_example_books_Book_setTitle.title = app_example_books_Book_setTitle.title == null ? title : app_example_books_Book_setTitle.title;
                            return new Object[]{app_example_books_Book_setTitle.title            };
                        }catch (Exception e){
                                 logger.error("fail waitTo ",e);
                        }
                        return new Object[]{};
                    }
                };
                 {
                      org.softauto.listener.server.ListenerObserver.getInstance().register("app_example_books_Book_setTitle", _waitTo);
                 }
                lock.await(timeOutInMin, TimeUnit.MINUTES);
                if(lock.getCount() > 0){
                     throw new Exception("timeOut for lock ");
                }
            }catch (Exception e){
               logger.error("fail waitTo ",e);
            }
        }
        logger.debug("successfully wait to app_example_books_Book_setTitle");
        return app_example_books_Book_setTitle;
    }

    public static void waitTo(Handler<AsyncResult<app_example_books_Book_setTitle>> resultHandler){
    if(app_example_books_Book_setTitle == null){
            try{
                logger.debug("waiting for app_example_books_Book_setTitle");
                app_example_books_Book_setTitle = new app_example_books_Book_setTitle();
                lock = new CountDownLatch(1);
                lock.await(timeOutInMin, TimeUnit.MINUTES);
                app_example_books_Book_setTitle _waitTo = new app_example_books_Book_setTitle(){
                     @Override
                     public Object[] app_example_books_Book_setTitle(                        java.lang.String title){
                    try{
                        logger.debug("done waiting for app_example_books_Book_setTitle");
                        lock.countDown();
                        seen = true;
                        logger.debug("got call for app_example_books_Book_setTitle seen:"+seen);
                         app_example_books_Book_setTitle.title = app_example_books_Book_setTitle.title == null ? title : app_example_books_Book_setTitle.title;
                         return new Object[]{app_example_books_Book_setTitle.title                            };
                         }catch (Exception e){
                               logger.error("fail waitTo ",e);
                         }
                         return new Object[]{};
                    }
            };
                {
                    org.softauto.listener.server.ListenerObserver.getInstance().register("app_example_books_Book_setTitle", _waitTo);
                }
                lock.await(timeOutInMin, TimeUnit.MINUTES);
                if(lock.getCount() > 0){
                     throw new Exception("timeOut for lock ");
                }
                logger.debug("successfully wait to app_example_books_Book_setTitle");
                resultHandler.handle(Future.handleResult(app_example_books_Book_setTitle));
            }catch (Exception e){
               logger.error("fail waitTo ",e);
               resultHandler.handle(Future.handleError(e));
            }
        }

    }




    public java.lang.String getTitle(){
        return app_example_books_Book_setTitle.title;
    }

    public app_example_books_Book_setTitle getTitle(Handler<AsyncResult<java.lang.String>> resultHandler){
        resultHandler.handle(Future.handleResult(app_example_books_Book_setTitle.title));
        return this;
    }

    public app_example_books_Book_setTitle getTitle(CallFuture<java.lang.String> future){
       future.handleResult(app_example_books_Book_setTitle.title);
       return this;
    }

    public app_example_books_Book_setTitle setTitle(java.lang.String title){
        app_example_books_Book_setTitle.title = title;
        return this;
    }





}


public static class app_example_books_Book_getAuthor{
    private static app_example_books_Book_getAuthor app_example_books_Book_getAuthor= null;
    static boolean seen = false;
    static CountDownLatch lock = new CountDownLatch(0);
    static CountDownLatch lockForResult = new CountDownLatch(0);
    java.lang.String _result;

    public     java.lang.Object[] app_example_books_Book_getAuthor(    ){
     LogManager.getLogger().log(Level.getLevel("INFO [SUT]"), " app_example_books_Book_getAuthor args :"        );

       return new Object[]{            };

    }


    public static app_example_books_Book_getAuthor waitTo(){
    if(app_example_books_Book_getAuthor == null){
            try{
                logger.debug("waiting for app_example_books_Book_getAuthor");
                app_example_books_Book_getAuthor = new app_example_books_Book_getAuthor();
                lock = new CountDownLatch(1);
                app_example_books_Book_getAuthor _waitTo =  new app_example_books_Book_getAuthor(){
                        @Override
                        public Object[] app_example_books_Book_getAuthor(){
                        try{
                            logger.debug("done waiting for app_example_books_Book_getAuthor");
                            lock.countDown();
                            seen = true;
                            logger.debug("got call for app_example_books_Book_getAuthor seen:"+seen);
                            return new Object[]{            };
                        }catch (Exception e){
                                 logger.error("fail waitTo ",e);
                        }
                        return new Object[]{};
                    }
                };
                 {
                      org.softauto.listener.server.ListenerObserver.getInstance().register("app_example_books_Book_getAuthor", _waitTo);
                 }
                lock.await(timeOutInMin, TimeUnit.MINUTES);
                if(lock.getCount() > 0){
                     throw new Exception("timeOut for lock ");
                }
            }catch (Exception e){
               logger.error("fail waitTo ",e);
            }
        }
        logger.debug("successfully wait to app_example_books_Book_getAuthor");
        return app_example_books_Book_getAuthor;
    }

    public static void waitTo(Handler<AsyncResult<app_example_books_Book_getAuthor>> resultHandler){
    if(app_example_books_Book_getAuthor == null){
            try{
                logger.debug("waiting for app_example_books_Book_getAuthor");
                app_example_books_Book_getAuthor = new app_example_books_Book_getAuthor();
                lock = new CountDownLatch(1);
                lock.await(timeOutInMin, TimeUnit.MINUTES);
                app_example_books_Book_getAuthor _waitTo = new app_example_books_Book_getAuthor(){
                     @Override
                     public Object[] app_example_books_Book_getAuthor(){
                    try{
                        logger.debug("done waiting for app_example_books_Book_getAuthor");
                        lock.countDown();
                        seen = true;
                        logger.debug("got call for app_example_books_Book_getAuthor seen:"+seen);
                         return new Object[]{                            };
                         }catch (Exception e){
                               logger.error("fail waitTo ",e);
                         }
                         return new Object[]{};
                    }
            };
                {
                    org.softauto.listener.server.ListenerObserver.getInstance().register("app_example_books_Book_getAuthor", _waitTo);
                }
                lock.await(timeOutInMin, TimeUnit.MINUTES);
                if(lock.getCount() > 0){
                     throw new Exception("timeOut for lock ");
                }
                logger.debug("successfully wait to app_example_books_Book_getAuthor");
                resultHandler.handle(Future.handleResult(app_example_books_Book_getAuthor));
            }catch (Exception e){
               logger.error("fail waitTo ",e);
               resultHandler.handle(Future.handleError(e));
            }
        }

    }


    public static app_example_books_Book_getAuthor waitToResult(){
    if(app_example_books_Book_getAuthor == null){
            try{
                logger.debug("waiting for result of app_example_books_Book_getAuthor");
                app_example_books_Book_getAuthor = new app_example_books_Book_getAuthor();
                lockForResult = new CountDownLatch(1);
                app_example_books_Book_getAuthor _waitToResult = new app_example_books_Book_getAuthor(){
                        public void app_example_books_Book_getAuthor(java.lang.String result){
                        try{
                            logger.debug("done waiting for app_example_books_Book_getAuthor");
                            lockForResult.countDown();
                            app_example_books_Book_getAuthor._result = result;
                        }catch (Exception e){
                                logger.error("fail waitTo ",e);
                        }
                    }
                };
                {
                    org.softauto.listener.server.ListenerObserver.getInstance().register("app_example_books_Book_getAuthor", _waitToResult);
                }
                lockForResult.await(timeOutInMin, TimeUnit.MINUTES);
                if(lockForResult.getCount() > 0){
                     throw new Exception("timeOut for lock ");
                }else {
                    logger.debug("successfully wait to app_example_books_Book_getAuthor");
                }
            }catch (Exception e){
               logger.error("fail waitTo ",e);
            }
        }
        return app_example_books_Book_getAuthor;
    }


    public static void waitToResult(Handler<AsyncResult<app_example_books_Book_getAuthor>> resultHandler){
    if(app_example_books_Book_getAuthor == null){
            try{
                logger.debug("waiting for result of app_example_books_Book_getAuthor");
                app_example_books_Book_getAuthor = new app_example_books_Book_getAuthor();
                lockForResult = new CountDownLatch(1);
                app_example_books_Book_getAuthor _waitToResult = new app_example_books_Book_getAuthor(){
                public void app_example_books_Book_getAuthor(java.lang.String result){
                try{
                   logger.debug("done waiting for app_example_books_Book_getAuthor");
                   lockForResult.countDown();
                   app_example_books_Book_getAuthor._result = result;
                }catch (Exception e){
                     logger.error("fail waitToResult ",e);
                }
         }
    };
                {
                   org.softauto.listener.server.ListenerObserver.getInstance().register("app_example_books_Book_getAuthor", _waitToResult);
                }
                lockForResult.await(timeOutInMin, TimeUnit.MINUTES);
                if(lockForResult.getCount() > 0){
                   throw new Exception("timeOut for lock ");
                }else {
                    logger.debug("successfully wait to app_example_books_Book_getAuthor");
                }
                resultHandler.handle(Future.handleResult(app_example_books_Book_getAuthor));
            }catch (Exception e){
               logger.error("fail waitTo ",e);
               resultHandler.handle(Future.handleError(e));
            }
        }
    }



    public java.lang.String get_Result(){
        return _result;
    }

    public app_example_books_Book_getAuthor get_Result(Handler<AsyncResult<java.lang.String>> resultHandler){
        try{
            resultHandler.handle(Future.handleResult(_result));
        }catch (Exception e){
          logger.error("fail  get_Result ",e);
          resultHandler.handle(Future.handleError(e));
        }
        logger.debug("successfully get_Result "+ _result);
        return this;
    }

    public app_example_books_Book_getAuthor get_Result(CallFuture<java.lang.String> future){
         future.handleResult(_result);
         return this;
    }








}


public static class app_example_books_Book_setAuthor{
    private static app_example_books_Book_setAuthor app_example_books_Book_setAuthor= null;
    static boolean seen = false;
    static CountDownLatch lock = new CountDownLatch(0);
    static CountDownLatch lockForResult = new CountDownLatch(0);
    static java.lang.String author = null;

    public     java.lang.Object[] app_example_books_Book_setAuthor(java.lang.String author    ){
     LogManager.getLogger().log(Level.getLevel("INFO [SUT]"), " app_example_books_Book_setAuthor args :"  +" author:" + author       );

       return new Object[]{};

    }


    public static app_example_books_Book_setAuthor waitTo(){
    if(app_example_books_Book_setAuthor == null){
            try{
                logger.debug("waiting for app_example_books_Book_setAuthor");
                app_example_books_Book_setAuthor = new app_example_books_Book_setAuthor();
                lock = new CountDownLatch(1);
                app_example_books_Book_setAuthor _waitTo =  new app_example_books_Book_setAuthor(){
                        @Override
                        public Object[] app_example_books_Book_setAuthor(java.lang.String author){
                        try{
                            logger.debug("done waiting for app_example_books_Book_setAuthor");
                            lock.countDown();
                            seen = true;
                            logger.debug("got call for app_example_books_Book_setAuthor seen:"+seen);
                            app_example_books_Book_setAuthor.author = app_example_books_Book_setAuthor.author == null ? author : app_example_books_Book_setAuthor.author;
                            return new Object[]{app_example_books_Book_setAuthor.author            };
                        }catch (Exception e){
                                 logger.error("fail waitTo ",e);
                        }
                        return new Object[]{};
                    }
                };
                 {
                      org.softauto.listener.server.ListenerObserver.getInstance().register("app_example_books_Book_setAuthor", _waitTo);
                 }
                lock.await(timeOutInMin, TimeUnit.MINUTES);
                if(lock.getCount() > 0){
                     throw new Exception("timeOut for lock ");
                }
            }catch (Exception e){
               logger.error("fail waitTo ",e);
            }
        }
        logger.debug("successfully wait to app_example_books_Book_setAuthor");
        return app_example_books_Book_setAuthor;
    }

    public static void waitTo(Handler<AsyncResult<app_example_books_Book_setAuthor>> resultHandler){
    if(app_example_books_Book_setAuthor == null){
            try{
                logger.debug("waiting for app_example_books_Book_setAuthor");
                app_example_books_Book_setAuthor = new app_example_books_Book_setAuthor();
                lock = new CountDownLatch(1);
                lock.await(timeOutInMin, TimeUnit.MINUTES);
                app_example_books_Book_setAuthor _waitTo = new app_example_books_Book_setAuthor(){
                     @Override
                     public Object[] app_example_books_Book_setAuthor(                        java.lang.String author){
                    try{
                        logger.debug("done waiting for app_example_books_Book_setAuthor");
                        lock.countDown();
                        seen = true;
                        logger.debug("got call for app_example_books_Book_setAuthor seen:"+seen);
                         app_example_books_Book_setAuthor.author = app_example_books_Book_setAuthor.author == null ? author : app_example_books_Book_setAuthor.author;
                         return new Object[]{app_example_books_Book_setAuthor.author                            };
                         }catch (Exception e){
                               logger.error("fail waitTo ",e);
                         }
                         return new Object[]{};
                    }
            };
                {
                    org.softauto.listener.server.ListenerObserver.getInstance().register("app_example_books_Book_setAuthor", _waitTo);
                }
                lock.await(timeOutInMin, TimeUnit.MINUTES);
                if(lock.getCount() > 0){
                     throw new Exception("timeOut for lock ");
                }
                logger.debug("successfully wait to app_example_books_Book_setAuthor");
                resultHandler.handle(Future.handleResult(app_example_books_Book_setAuthor));
            }catch (Exception e){
               logger.error("fail waitTo ",e);
               resultHandler.handle(Future.handleError(e));
            }
        }

    }




    public java.lang.String getAuthor(){
        return app_example_books_Book_setAuthor.author;
    }

    public app_example_books_Book_setAuthor getAuthor(Handler<AsyncResult<java.lang.String>> resultHandler){
        resultHandler.handle(Future.handleResult(app_example_books_Book_setAuthor.author));
        return this;
    }

    public app_example_books_Book_setAuthor getAuthor(CallFuture<java.lang.String> future){
       future.handleResult(app_example_books_Book_setAuthor.author);
       return this;
    }

    public app_example_books_Book_setAuthor setAuthor(java.lang.String author){
        app_example_books_Book_setAuthor.author = author;
        return this;
    }





}


public static class app_example_books_Book_getId{
    private static app_example_books_Book_getId app_example_books_Book_getId= null;
    static boolean seen = false;
    static CountDownLatch lock = new CountDownLatch(0);
    static CountDownLatch lockForResult = new CountDownLatch(0);
    int _result;

    public     java.lang.Object[] app_example_books_Book_getId(    ){
     LogManager.getLogger().log(Level.getLevel("INFO [SUT]"), " app_example_books_Book_getId args :"        );

       return new Object[]{            };

    }


    public static app_example_books_Book_getId waitTo(){
    if(app_example_books_Book_getId == null){
            try{
                logger.debug("waiting for app_example_books_Book_getId");
                app_example_books_Book_getId = new app_example_books_Book_getId();
                lock = new CountDownLatch(1);
                app_example_books_Book_getId _waitTo =  new app_example_books_Book_getId(){
                        @Override
                        public Object[] app_example_books_Book_getId(){
                        try{
                            logger.debug("done waiting for app_example_books_Book_getId");
                            lock.countDown();
                            seen = true;
                            logger.debug("got call for app_example_books_Book_getId seen:"+seen);
                            return new Object[]{            };
                        }catch (Exception e){
                                 logger.error("fail waitTo ",e);
                        }
                        return new Object[]{};
                    }
                };
                 {
                      org.softauto.listener.server.ListenerObserver.getInstance().register("app_example_books_Book_getId", _waitTo);
                 }
                lock.await(timeOutInMin, TimeUnit.MINUTES);
                if(lock.getCount() > 0){
                     throw new Exception("timeOut for lock ");
                }
            }catch (Exception e){
               logger.error("fail waitTo ",e);
            }
        }
        logger.debug("successfully wait to app_example_books_Book_getId");
        return app_example_books_Book_getId;
    }

    public static void waitTo(Handler<AsyncResult<app_example_books_Book_getId>> resultHandler){
    if(app_example_books_Book_getId == null){
            try{
                logger.debug("waiting for app_example_books_Book_getId");
                app_example_books_Book_getId = new app_example_books_Book_getId();
                lock = new CountDownLatch(1);
                lock.await(timeOutInMin, TimeUnit.MINUTES);
                app_example_books_Book_getId _waitTo = new app_example_books_Book_getId(){
                     @Override
                     public Object[] app_example_books_Book_getId(){
                    try{
                        logger.debug("done waiting for app_example_books_Book_getId");
                        lock.countDown();
                        seen = true;
                        logger.debug("got call for app_example_books_Book_getId seen:"+seen);
                         return new Object[]{                            };
                         }catch (Exception e){
                               logger.error("fail waitTo ",e);
                         }
                         return new Object[]{};
                    }
            };
                {
                    org.softauto.listener.server.ListenerObserver.getInstance().register("app_example_books_Book_getId", _waitTo);
                }
                lock.await(timeOutInMin, TimeUnit.MINUTES);
                if(lock.getCount() > 0){
                     throw new Exception("timeOut for lock ");
                }
                logger.debug("successfully wait to app_example_books_Book_getId");
                resultHandler.handle(Future.handleResult(app_example_books_Book_getId));
            }catch (Exception e){
               logger.error("fail waitTo ",e);
               resultHandler.handle(Future.handleError(e));
            }
        }

    }


    public static app_example_books_Book_getId waitToResult(){
    if(app_example_books_Book_getId == null){
            try{
                logger.debug("waiting for result of app_example_books_Book_getId");
                app_example_books_Book_getId = new app_example_books_Book_getId();
                lockForResult = new CountDownLatch(1);
                app_example_books_Book_getId _waitToResult = new app_example_books_Book_getId(){
                        public void app_example_books_Book_getId(int result){
                        try{
                            logger.debug("done waiting for app_example_books_Book_getId");
                            lockForResult.countDown();
                            app_example_books_Book_getId._result = result;
                        }catch (Exception e){
                                logger.error("fail waitTo ",e);
                        }
                    }
                };
                {
                    org.softauto.listener.server.ListenerObserver.getInstance().register("app_example_books_Book_getId", _waitToResult);
                }
                lockForResult.await(timeOutInMin, TimeUnit.MINUTES);
                if(lockForResult.getCount() > 0){
                     throw new Exception("timeOut for lock ");
                }else {
                    logger.debug("successfully wait to app_example_books_Book_getId");
                }
            }catch (Exception e){
               logger.error("fail waitTo ",e);
            }
        }
        return app_example_books_Book_getId;
    }


    public static void waitToResult(Handler<AsyncResult<app_example_books_Book_getId>> resultHandler){
    if(app_example_books_Book_getId == null){
            try{
                logger.debug("waiting for result of app_example_books_Book_getId");
                app_example_books_Book_getId = new app_example_books_Book_getId();
                lockForResult = new CountDownLatch(1);
                app_example_books_Book_getId _waitToResult = new app_example_books_Book_getId(){
                public void app_example_books_Book_getId(int result){
                try{
                   logger.debug("done waiting for app_example_books_Book_getId");
                   lockForResult.countDown();
                   app_example_books_Book_getId._result = result;
                }catch (Exception e){
                     logger.error("fail waitToResult ",e);
                }
         }
    };
                {
                   org.softauto.listener.server.ListenerObserver.getInstance().register("app_example_books_Book_getId", _waitToResult);
                }
                lockForResult.await(timeOutInMin, TimeUnit.MINUTES);
                if(lockForResult.getCount() > 0){
                   throw new Exception("timeOut for lock ");
                }else {
                    logger.debug("successfully wait to app_example_books_Book_getId");
                }
                resultHandler.handle(Future.handleResult(app_example_books_Book_getId));
            }catch (Exception e){
               logger.error("fail waitTo ",e);
               resultHandler.handle(Future.handleError(e));
            }
        }
    }



    public int get_Result(){
        return _result;
    }

    public app_example_books_Book_getId get_Result(Handler<AsyncResult<java.lang.Integer>> resultHandler){
        try{
            resultHandler.handle(Future.handleResult(_result));
        }catch (Exception e){
          logger.error("fail  get_Result ",e);
          resultHandler.handle(Future.handleError(e));
        }
        logger.debug("successfully get_Result "+ _result);
        return this;
    }

    public app_example_books_Book_getId get_Result(CallFuture<java.lang.Integer> future){
         future.handleResult(_result);
         return this;
    }








}


public static class app_example_books_Book_setId{
    private static app_example_books_Book_setId app_example_books_Book_setId= null;
    static boolean seen = false;
    static CountDownLatch lock = new CountDownLatch(0);
    static CountDownLatch lockForResult = new CountDownLatch(0);
    static int id = -1;

    public     java.lang.Object[] app_example_books_Book_setId(int id    ){
     LogManager.getLogger().log(Level.getLevel("INFO [SUT]"), " app_example_books_Book_setId args :"  +" id:" + id       );

       return new Object[]{};

    }


    public static app_example_books_Book_setId waitTo(){
    if(app_example_books_Book_setId == null){
            try{
                logger.debug("waiting for app_example_books_Book_setId");
                app_example_books_Book_setId = new app_example_books_Book_setId();
                lock = new CountDownLatch(1);
                app_example_books_Book_setId _waitTo =  new app_example_books_Book_setId(){
                        @Override
                        public Object[] app_example_books_Book_setId(int id){
                        try{
                            logger.debug("done waiting for app_example_books_Book_setId");
                            lock.countDown();
                            seen = true;
                            logger.debug("got call for app_example_books_Book_setId seen:"+seen);
                            app_example_books_Book_setId.id = app_example_books_Book_setId.id == -1 ? id : app_example_books_Book_setId.id;
                            return new Object[]{app_example_books_Book_setId.id            };
                        }catch (Exception e){
                                 logger.error("fail waitTo ",e);
                        }
                        return new Object[]{};
                    }
                };
                 {
                      org.softauto.listener.server.ListenerObserver.getInstance().register("app_example_books_Book_setId", _waitTo);
                 }
                lock.await(timeOutInMin, TimeUnit.MINUTES);
                if(lock.getCount() > 0){
                     throw new Exception("timeOut for lock ");
                }
            }catch (Exception e){
               logger.error("fail waitTo ",e);
            }
        }
        logger.debug("successfully wait to app_example_books_Book_setId");
        return app_example_books_Book_setId;
    }

    public static void waitTo(Handler<AsyncResult<app_example_books_Book_setId>> resultHandler){
    if(app_example_books_Book_setId == null){
            try{
                logger.debug("waiting for app_example_books_Book_setId");
                app_example_books_Book_setId = new app_example_books_Book_setId();
                lock = new CountDownLatch(1);
                lock.await(timeOutInMin, TimeUnit.MINUTES);
                app_example_books_Book_setId _waitTo = new app_example_books_Book_setId(){
                     @Override
                     public Object[] app_example_books_Book_setId(                        int id){
                    try{
                        logger.debug("done waiting for app_example_books_Book_setId");
                        lock.countDown();
                        seen = true;
                        logger.debug("got call for app_example_books_Book_setId seen:"+seen);
                         app_example_books_Book_setId.id = app_example_books_Book_setId.id == -1 ? id : app_example_books_Book_setId.id;
                         return new Object[]{app_example_books_Book_setId.id                            };
                         }catch (Exception e){
                               logger.error("fail waitTo ",e);
                         }
                         return new Object[]{};
                    }
            };
                {
                    org.softauto.listener.server.ListenerObserver.getInstance().register("app_example_books_Book_setId", _waitTo);
                }
                lock.await(timeOutInMin, TimeUnit.MINUTES);
                if(lock.getCount() > 0){
                     throw new Exception("timeOut for lock ");
                }
                logger.debug("successfully wait to app_example_books_Book_setId");
                resultHandler.handle(Future.handleResult(app_example_books_Book_setId));
            }catch (Exception e){
               logger.error("fail waitTo ",e);
               resultHandler.handle(Future.handleError(e));
            }
        }

    }




    public int getId(){
        return app_example_books_Book_setId.id;
    }

    public app_example_books_Book_setId getId(Handler<AsyncResult<java.lang.Integer>> resultHandler){
        resultHandler.handle(Future.handleResult(app_example_books_Book_setId.id));
        return this;
    }

    public app_example_books_Book_setId getId(CallFuture<java.lang.Integer> future){
       future.handleResult(app_example_books_Book_setId.id);
       return this;
    }

    public app_example_books_Book_setId setId(int id){
        app_example_books_Book_setId.id = id;
        return this;
    }





}

}